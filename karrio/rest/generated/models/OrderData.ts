/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022.8.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommodityData } from './CommodityData';
import {
    CommodityDataFromJSON,
    CommodityDataFromJSONTyped,
    CommodityDataToJSON,
} from './CommodityData';
import type { OrderBillingAddress } from './OrderBillingAddress';
import {
    OrderBillingAddressFromJSON,
    OrderBillingAddressFromJSONTyped,
    OrderBillingAddressToJSON,
} from './OrderBillingAddress';
import type { OrderDataShippingFrom } from './OrderDataShippingFrom';
import {
    OrderDataShippingFromFromJSON,
    OrderDataShippingFromFromJSONTyped,
    OrderDataShippingFromToJSON,
} from './OrderDataShippingFrom';
import type { OrderDataShippingTo } from './OrderDataShippingTo';
import {
    OrderDataShippingToFromJSON,
    OrderDataShippingToFromJSONTyped,
    OrderDataShippingToToJSON,
} from './OrderDataShippingTo';

/**
 * 
 * @export
 * @interface OrderData
 */
export interface OrderData {
    /**
     * The source' order id.
     * @type {string}
     * @memberof OrderData
     */
    order_id: string;
    /**
     * The order date. format: `YYYY-MM-DD`
     * @type {string}
     * @memberof OrderData
     */
    order_date?: string | null;
    /**
     * The order's source.<br/>
     *         e.g. API, POS, ERP, Shopify, Woocommerce, etc.
     *         
     * @type {string}
     * @memberof OrderData
     */
    source?: string;
    /**
     * 
     * @type {OrderDataShippingTo}
     * @memberof OrderData
     */
    shipping_to: OrderDataShippingTo;
    /**
     * 
     * @type {OrderDataShippingFrom}
     * @memberof OrderData
     */
    shipping_from?: OrderDataShippingFrom | null;
    /**
     * 
     * @type {OrderBillingAddress}
     * @memberof OrderData
     */
    billing_address?: OrderBillingAddress | null;
    /**
     * The order line items.
     * @type {Array<CommodityData>}
     * @memberof OrderData
     */
    line_items: Array<CommodityData>;
    /**
     * <details>
     *         <summary>The options available for the order shipments.</summary>
     * 
     *         {
     *             "currency": "USD",
     *             "paid_by": "third_party",
     *             "payment_account_number": "123456789",
     *             "duty_paid_by": "third_party",
     *             "duty_account_number": "123456789",
     *             "invoice_number": "123456789",
     *             "invoice_date": "2020-01-01",
     *             "single_item_per_parcel": true,
     *             "carrier_ids": ["canadapost-test"],
     *         }
     *         
     * @type {{ [key: string]: any; }}
     * @memberof OrderData
     */
    options?: { [key: string]: any; } | null;
    /**
     * User metadata for the order.
     * @type {{ [key: string]: any; }}
     * @memberof OrderData
     */
    metadata?: { [key: string]: any; };
}

/**
 * Check if a given object implements the OrderData interface.
 */
export function instanceOfOrderData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "order_id" in value;
    isInstance = isInstance && "shipping_to" in value;
    isInstance = isInstance && "line_items" in value;

    return isInstance;
}

export function OrderDataFromJSON(json: any): OrderData {
    return OrderDataFromJSONTyped(json, false);
}

export function OrderDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'order_id': json['order_id'],
        'order_date': !exists(json, 'order_date') ? undefined : json['order_date'],
        'source': !exists(json, 'source') ? undefined : json['source'],
        'shipping_to': OrderDataShippingToFromJSON(json['shipping_to']),
        'shipping_from': !exists(json, 'shipping_from') ? undefined : OrderDataShippingFromFromJSON(json['shipping_from']),
        'billing_address': !exists(json, 'billing_address') ? undefined : OrderBillingAddressFromJSON(json['billing_address']),
        'line_items': ((json['line_items'] as Array<any>).map(CommodityDataFromJSON)),
        'options': !exists(json, 'options') ? undefined : json['options'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
    };
}

export function OrderDataToJSON(value?: OrderData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'order_id': value.order_id,
        'order_date': value.order_date,
        'source': value.source,
        'shipping_to': OrderDataShippingToToJSON(value.shipping_to),
        'shipping_from': OrderDataShippingFromToJSON(value.shipping_from),
        'billing_address': OrderBillingAddressToJSON(value.billing_address),
        'line_items': ((value.line_items as Array<any>).map(CommodityDataToJSON)),
        'options': value.options,
        'metadata': value.metadata,
    };
}

