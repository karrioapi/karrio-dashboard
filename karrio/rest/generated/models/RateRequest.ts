/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022.8.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ParcelData } from './ParcelData';
import {
    ParcelDataFromJSON,
    ParcelDataFromJSONTyped,
    ParcelDataToJSON,
} from './ParcelData';
import type { RateRequestShipper } from './RateRequestShipper';
import {
    RateRequestShipperFromJSON,
    RateRequestShipperFromJSONTyped,
    RateRequestShipperToJSON,
} from './RateRequestShipper';

/**
 * 
 * @export
 * @interface RateRequest
 */
export interface RateRequest {
    /**
     * 
     * @type {RateRequestShipper}
     * @memberof RateRequest
     */
    shipper: RateRequestShipper;
    /**
     * 
     * @type {RateRequestShipper}
     * @memberof RateRequest
     */
    recipient: RateRequestShipper;
    /**
     * The shipment's parcels
     * @type {Array<ParcelData>}
     * @memberof RateRequest
     */
    parcels: Array<ParcelData>;
    /**
     * The requested carrier service for the shipment.<br/>
     *         Please consult the reference for specific carriers services.<br/>
     *         Note that this is a list because on a Multi-carrier rate request you could specify a service per carrier.
     *         
     * @type {Array<string>}
     * @memberof RateRequest
     */
    services?: Array<string> | null;
    /**
     * <details>
     *         <summary>The options available for the shipment.</summary>
     * 
     *         {
     *             "currency": "USD",
     *             "insurance": 100.00,
     *             "cash_on_delivery": 30.00,
     *             "shipment_date": "2020-01-01",
     *             "dangerous_good": true,
     *             "declared_value": 150.00,
     *             "email_notification": true,
     *             "email_notification_to": "shipper@mail.com",
     *             "signature_confirmation": true,
     *         }
     *         
     * @type {{ [key: string]: any; }}
     * @memberof RateRequest
     */
    options?: { [key: string]: any; };
    /**
     * The shipment reference
     * @type {string}
     * @memberof RateRequest
     */
    reference?: string | null;
    /**
     * The list of configured carriers you wish to get rates from.
     * @type {Array<string>}
     * @memberof RateRequest
     */
    carrier_ids?: Array<string> | null;
}

/**
 * Check if a given object implements the RateRequest interface.
 */
export function instanceOfRateRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "shipper" in value;
    isInstance = isInstance && "recipient" in value;
    isInstance = isInstance && "parcels" in value;

    return isInstance;
}

export function RateRequestFromJSON(json: any): RateRequest {
    return RateRequestFromJSONTyped(json, false);
}

export function RateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RateRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'shipper': RateRequestShipperFromJSON(json['shipper']),
        'recipient': RateRequestShipperFromJSON(json['recipient']),
        'parcels': ((json['parcels'] as Array<any>).map(ParcelDataFromJSON)),
        'services': !exists(json, 'services') ? undefined : json['services'],
        'options': !exists(json, 'options') ? undefined : json['options'],
        'reference': !exists(json, 'reference') ? undefined : json['reference'],
        'carrier_ids': !exists(json, 'carrier_ids') ? undefined : json['carrier_ids'],
    };
}

export function RateRequestToJSON(value?: RateRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'shipper': RateRequestShipperToJSON(value.shipper),
        'recipient': RateRequestShipperToJSON(value.recipient),
        'parcels': ((value.parcels as Array<any>).map(ParcelDataToJSON)),
        'services': value.services,
        'options': value.options,
        'reference': value.reference,
        'carrier_ids': value.carrier_ids,
    };
}

