/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022.8.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommodityOriginCountry } from './CommodityOriginCountry';
import {
    CommodityOriginCountryFromJSON,
    CommodityOriginCountryFromJSONTyped,
    CommodityOriginCountryToJSON,
} from './CommodityOriginCountry';
import type { CommodityValueCurrency } from './CommodityValueCurrency';
import {
    CommodityValueCurrencyFromJSON,
    CommodityValueCurrencyFromJSONTyped,
    CommodityValueCurrencyToJSON,
} from './CommodityValueCurrency';
import type { WeightUnitEnum } from './WeightUnitEnum';
import {
    WeightUnitEnumFromJSON,
    WeightUnitEnumFromJSONTyped,
    WeightUnitEnumToJSON,
} from './WeightUnitEnum';

/**
 * 
 * @export
 * @interface Commodity
 */
export interface Commodity {
    /**
     * A unique identifier
     * @type {string}
     * @memberof Commodity
     */
    id?: string;
    /**
     * The commodity's weight
     * @type {number}
     * @memberof Commodity
     */
    weight: number;
    /**
     * The commodity's weight unit
     * @type {WeightUnitEnum}
     * @memberof Commodity
     */
    weight_unit: WeightUnitEnum;
    /**
     * A description of the commodity
     * @type {string}
     * @memberof Commodity
     */
    description?: string | null;
    /**
     * The commodity's quantity (number or item)
     * @type {number}
     * @memberof Commodity
     */
    quantity?: number;
    /**
     * The commodity's sku number
     * @type {string}
     * @memberof Commodity
     */
    sku?: string | null;
    /**
     * The commodity's hs_code number
     * @type {string}
     * @memberof Commodity
     */
    hs_code?: string | null;
    /**
     * The monetary value of the commodity
     * @type {number}
     * @memberof Commodity
     */
    value_amount?: number | null;
    /**
     * 
     * @type {CommodityValueCurrency}
     * @memberof Commodity
     */
    value_currency?: CommodityValueCurrency | null;
    /**
     * 
     * @type {CommodityOriginCountry}
     * @memberof Commodity
     */
    origin_country?: CommodityOriginCountry | null;
    /**
     * The id of the related order line item.
     * @type {string}
     * @memberof Commodity
     */
    parent_id?: string | null;
    /**
     * <details>
     *         <summary>Commodity user references metadata.</summary>
     * 
     *         {
     *             "part_number": "5218487281",
     *             "reference1": "# ref 1",
     *             "reference2": "# ref 2",
     *             "reference3": "# ref 3",
     *             ...
     *         }
     *         
     * @type {{ [key: string]: any; }}
     * @memberof Commodity
     */
    metadata?: { [key: string]: any; } | null;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof Commodity
     */
    object_type?: string;
}

/**
 * Check if a given object implements the Commodity interface.
 */
export function instanceOfCommodity(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "weight" in value;
    isInstance = isInstance && "weight_unit" in value;

    return isInstance;
}

export function CommodityFromJSON(json: any): Commodity {
    return CommodityFromJSONTyped(json, false);
}

export function CommodityFromJSONTyped(json: any, ignoreDiscriminator: boolean): Commodity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'weight': json['weight'],
        'weight_unit': WeightUnitEnumFromJSON(json['weight_unit']),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'sku': !exists(json, 'sku') ? undefined : json['sku'],
        'hs_code': !exists(json, 'hs_code') ? undefined : json['hs_code'],
        'value_amount': !exists(json, 'value_amount') ? undefined : json['value_amount'],
        'value_currency': !exists(json, 'value_currency') ? undefined : CommodityValueCurrencyFromJSON(json['value_currency']),
        'origin_country': !exists(json, 'origin_country') ? undefined : CommodityOriginCountryFromJSON(json['origin_country']),
        'parent_id': !exists(json, 'parent_id') ? undefined : json['parent_id'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'object_type': !exists(json, 'object_type') ? undefined : json['object_type'],
    };
}

export function CommodityToJSON(value?: Commodity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'weight': value.weight,
        'weight_unit': WeightUnitEnumToJSON(value.weight_unit),
        'description': value.description,
        'quantity': value.quantity,
        'sku': value.sku,
        'hs_code': value.hs_code,
        'value_amount': value.value_amount,
        'value_currency': CommodityValueCurrencyToJSON(value.value_currency),
        'origin_country': CommodityOriginCountryToJSON(value.origin_country),
        'parent_id': value.parent_id,
        'metadata': value.metadata,
        'object_type': value.object_type,
    };
}

