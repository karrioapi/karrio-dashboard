/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022.8.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Message } from './Message';
import {
    MessageFromJSON,
    MessageFromJSONTyped,
    MessageToJSON,
} from './Message';
import type { PickupResponsePickup } from './PickupResponsePickup';
import {
    PickupResponsePickupFromJSON,
    PickupResponsePickupFromJSONTyped,
    PickupResponsePickupToJSON,
} from './PickupResponsePickup';

/**
 * 
 * @export
 * @interface PickupResponse
 */
export interface PickupResponse {
    /**
     * The list of note or warning messages
     * @type {Array<Message>}
     * @memberof PickupResponse
     */
    messages?: Array<Message>;
    /**
     * 
     * @type {PickupResponsePickup}
     * @memberof PickupResponse
     */
    pickup?: PickupResponsePickup;
}

/**
 * Check if a given object implements the PickupResponse interface.
 */
export function instanceOfPickupResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PickupResponseFromJSON(json: any): PickupResponse {
    return PickupResponseFromJSONTyped(json, false);
}

export function PickupResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PickupResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'messages': !exists(json, 'messages') ? undefined : ((json['messages'] as Array<any>).map(MessageFromJSON)),
        'pickup': !exists(json, 'pickup') ? undefined : PickupResponsePickupFromJSON(json['pickup']),
    };
}

export function PickupResponseToJSON(value?: PickupResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'messages': value.messages === undefined ? undefined : ((value.messages as Array<any>).map(MessageToJSON)),
        'pickup': PickupResponsePickupToJSON(value.pickup),
    };
}

