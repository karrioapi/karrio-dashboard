/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022.8.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AddressValidation } from './AddressValidation';
import {
    AddressValidationFromJSON,
    AddressValidationFromJSONTyped,
    AddressValidationToJSON,
} from './AddressValidation';
import type { CountryEnum } from './CountryEnum';
import {
    CountryEnumFromJSON,
    CountryEnumFromJSONTyped,
    CountryEnumToJSON,
} from './CountryEnum';

/**
 * The address of the party.<br/>
 *         Origin address (ship from) for the **shipper**<br/>
 *         Destination address (ship to) for the **recipient**
 *         
 * @export
 * @interface ShipmentShipper
 */
export interface ShipmentShipper {
    /**
     * A unique identifier
     * @type {string}
     * @memberof ShipmentShipper
     */
    id?: string;
    /**
     * The address postal code
     *         **(required for shipment purchase)**
     *         
     * @type {string}
     * @memberof ShipmentShipper
     */
    postal_code?: string | null;
    /**
     * The address city.
     *         **(required for shipment purchase)**
     *         
     * @type {string}
     * @memberof ShipmentShipper
     */
    city?: string | null;
    /**
     * The party frederal tax id
     * @type {string}
     * @memberof ShipmentShipper
     */
    federal_tax_id?: string | null;
    /**
     * The party state id
     * @type {string}
     * @memberof ShipmentShipper
     */
    state_tax_id?: string | null;
    /**
     * Attention to
     *         **(required for shipment purchase)**
     *         
     * @type {string}
     * @memberof ShipmentShipper
     */
    person_name?: string | null;
    /**
     * The company name if the party is a company
     * @type {string}
     * @memberof ShipmentShipper
     */
    company_name?: string | null;
    /**
     * The address country code
     * @type {CountryEnum}
     * @memberof ShipmentShipper
     */
    country_code: CountryEnum;
    /**
     * The party email
     * @type {string}
     * @memberof ShipmentShipper
     */
    email?: string | null;
    /**
     * The party phone number.
     * @type {string}
     * @memberof ShipmentShipper
     */
    phone_number?: string | null;
    /**
     * The address state code
     * @type {string}
     * @memberof ShipmentShipper
     */
    state_code?: string | null;
    /**
     * The address suburb if known
     * @type {string}
     * @memberof ShipmentShipper
     */
    suburb?: string | null;
    /**
     * Indicate if the address is residential or commercial (enterprise)
     * @type {boolean}
     * @memberof ShipmentShipper
     */
    residential?: boolean | null;
    /**
     * The address line with street number <br/>
     *         **(required for shipment purchase)**
     *         
     * @type {string}
     * @memberof ShipmentShipper
     */
    address_line1?: string | null;
    /**
     * The address line with suite number
     * @type {string}
     * @memberof ShipmentShipper
     */
    address_line2?: string | null;
    /**
     * Indicate if the address should be validated
     * @type {boolean}
     * @memberof ShipmentShipper
     */
    validate_location?: boolean | null;
    /**
     * Specifies the object type
     * @type {string}
     * @memberof ShipmentShipper
     */
    object_type?: string;
    /**
     * 
     * @type {AddressValidation}
     * @memberof ShipmentShipper
     */
    validation?: AddressValidation | null;
}

/**
 * Check if a given object implements the ShipmentShipper interface.
 */
export function instanceOfShipmentShipper(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "country_code" in value;

    return isInstance;
}

export function ShipmentShipperFromJSON(json: any): ShipmentShipper {
    return ShipmentShipperFromJSONTyped(json, false);
}

export function ShipmentShipperFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShipmentShipper {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'postal_code': !exists(json, 'postal_code') ? undefined : json['postal_code'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'federal_tax_id': !exists(json, 'federal_tax_id') ? undefined : json['federal_tax_id'],
        'state_tax_id': !exists(json, 'state_tax_id') ? undefined : json['state_tax_id'],
        'person_name': !exists(json, 'person_name') ? undefined : json['person_name'],
        'company_name': !exists(json, 'company_name') ? undefined : json['company_name'],
        'country_code': CountryEnumFromJSON(json['country_code']),
        'email': !exists(json, 'email') ? undefined : json['email'],
        'phone_number': !exists(json, 'phone_number') ? undefined : json['phone_number'],
        'state_code': !exists(json, 'state_code') ? undefined : json['state_code'],
        'suburb': !exists(json, 'suburb') ? undefined : json['suburb'],
        'residential': !exists(json, 'residential') ? undefined : json['residential'],
        'address_line1': !exists(json, 'address_line1') ? undefined : json['address_line1'],
        'address_line2': !exists(json, 'address_line2') ? undefined : json['address_line2'],
        'validate_location': !exists(json, 'validate_location') ? undefined : json['validate_location'],
        'object_type': !exists(json, 'object_type') ? undefined : json['object_type'],
        'validation': !exists(json, 'validation') ? undefined : AddressValidationFromJSON(json['validation']),
    };
}

export function ShipmentShipperToJSON(value?: ShipmentShipper | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'postal_code': value.postal_code,
        'city': value.city,
        'federal_tax_id': value.federal_tax_id,
        'state_tax_id': value.state_tax_id,
        'person_name': value.person_name,
        'company_name': value.company_name,
        'country_code': CountryEnumToJSON(value.country_code),
        'email': value.email,
        'phone_number': value.phone_number,
        'state_code': value.state_code,
        'suburb': value.suburb,
        'residential': value.residential,
        'address_line1': value.address_line1,
        'address_line2': value.address_line2,
        'validate_location': value.validate_location,
        'object_type': value.object_type,
        'validation': AddressValidationToJSON(value.validation),
    };
}

