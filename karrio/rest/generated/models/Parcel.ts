/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022.8.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Commodity } from './Commodity';
import {
    CommodityFromJSON,
    CommodityFromJSONTyped,
    CommodityToJSON,
} from './Commodity';
import type { ParcelDimensionUnit } from './ParcelDimensionUnit';
import {
    ParcelDimensionUnitFromJSON,
    ParcelDimensionUnitFromJSONTyped,
    ParcelDimensionUnitToJSON,
} from './ParcelDimensionUnit';
import type { WeightUnitEnum } from './WeightUnitEnum';
import {
    WeightUnitEnumFromJSON,
    WeightUnitEnumFromJSONTyped,
    WeightUnitEnumToJSON,
} from './WeightUnitEnum';

/**
 * 
 * @export
 * @interface Parcel
 */
export interface Parcel {
    /**
     * A unique identifier
     * @type {string}
     * @memberof Parcel
     */
    id?: string;
    /**
     * The parcel's weight
     * @type {number}
     * @memberof Parcel
     */
    weight: number;
    /**
     * The parcel's width
     * @type {number}
     * @memberof Parcel
     */
    width?: number | null;
    /**
     * The parcel's height
     * @type {number}
     * @memberof Parcel
     */
    height?: number | null;
    /**
     * The parcel's length
     * @type {number}
     * @memberof Parcel
     */
    length?: number | null;
    /**
     * The parcel's packaging type.<br/>
     *         **Note that the packaging is optional when using a package preset.**<br/>
     *         values: <br/>
     *         `envelope` `pak` `tube` `pallet` `small_box` `medium_box` `your_packaging`<br/>
     *         For carrier specific packaging types, please consult the reference.
     *         
     * @type {string}
     * @memberof Parcel
     */
    packaging_type?: string | null;
    /**
     * The parcel's package preset.<br/>
     *         For carrier specific package presets, please consult the reference.
     *         
     * @type {string}
     * @memberof Parcel
     */
    package_preset?: string | null;
    /**
     * The parcel's description
     * @type {string}
     * @memberof Parcel
     */
    description?: string | null;
    /**
     * The parcel's content description
     * @type {string}
     * @memberof Parcel
     */
    content?: string | null;
    /**
     * Indicates if the parcel is composed of documents only
     * @type {boolean}
     * @memberof Parcel
     */
    is_document?: boolean | null;
    /**
     * The parcel's weight unit
     * @type {WeightUnitEnum}
     * @memberof Parcel
     */
    weight_unit: WeightUnitEnum;
    /**
     * 
     * @type {ParcelDimensionUnit}
     * @memberof Parcel
     */
    dimension_unit?: ParcelDimensionUnit | null;
    /**
     * The parcel items.
     * @type {Array<Commodity>}
     * @memberof Parcel
     */
    items?: Array<Commodity>;
    /**
     * The parcel reference number.<br/>
     *         (can be used as tracking number for custom carriers)
     *         
     * @type {string}
     * @memberof Parcel
     */
    reference_number?: string | null;
    /**
     * The parcel's freight class for pallet and freight shipments.
     * @type {string}
     * @memberof Parcel
     */
    freight_class?: string | null;
    /**
     * <details>
     *         <summary>Parcel specific options.</summary>
     * 
     *         {
     *             "insurance": "100.00",
     *             "insured_by": "carrier",
     *         }
     *         
     * @type {{ [key: string]: any; }}
     * @memberof Parcel
     */
    options?: { [key: string]: any; };
    /**
     * Specifies the object type
     * @type {string}
     * @memberof Parcel
     */
    object_type?: string;
}

/**
 * Check if a given object implements the Parcel interface.
 */
export function instanceOfParcel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "weight" in value;
    isInstance = isInstance && "weight_unit" in value;

    return isInstance;
}

export function ParcelFromJSON(json: any): Parcel {
    return ParcelFromJSONTyped(json, false);
}

export function ParcelFromJSONTyped(json: any, ignoreDiscriminator: boolean): Parcel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'weight': json['weight'],
        'width': !exists(json, 'width') ? undefined : json['width'],
        'height': !exists(json, 'height') ? undefined : json['height'],
        'length': !exists(json, 'length') ? undefined : json['length'],
        'packaging_type': !exists(json, 'packaging_type') ? undefined : json['packaging_type'],
        'package_preset': !exists(json, 'package_preset') ? undefined : json['package_preset'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'is_document': !exists(json, 'is_document') ? undefined : json['is_document'],
        'weight_unit': WeightUnitEnumFromJSON(json['weight_unit']),
        'dimension_unit': !exists(json, 'dimension_unit') ? undefined : ParcelDimensionUnitFromJSON(json['dimension_unit']),
        'items': !exists(json, 'items') ? undefined : ((json['items'] as Array<any>).map(CommodityFromJSON)),
        'reference_number': !exists(json, 'reference_number') ? undefined : json['reference_number'],
        'freight_class': !exists(json, 'freight_class') ? undefined : json['freight_class'],
        'options': !exists(json, 'options') ? undefined : json['options'],
        'object_type': !exists(json, 'object_type') ? undefined : json['object_type'],
    };
}

export function ParcelToJSON(value?: Parcel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'weight': value.weight,
        'width': value.width,
        'height': value.height,
        'length': value.length,
        'packaging_type': value.packaging_type,
        'package_preset': value.package_preset,
        'description': value.description,
        'content': value.content,
        'is_document': value.is_document,
        'weight_unit': WeightUnitEnumToJSON(value.weight_unit),
        'dimension_unit': ParcelDimensionUnitToJSON(value.dimension_unit),
        'items': value.items === undefined ? undefined : ((value.items as Array<any>).map(CommodityToJSON)),
        'reference_number': value.reference_number,
        'freight_class': value.freight_class,
        'options': value.options,
        'object_type': value.object_type,
    };
}

