/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022.8.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PickupCancelRequestAddress } from './PickupCancelRequestAddress';
import {
    PickupCancelRequestAddressFromJSON,
    PickupCancelRequestAddressFromJSONTyped,
    PickupCancelRequestAddressToJSON,
} from './PickupCancelRequestAddress';

/**
 * 
 * @export
 * @interface PickupCancelRequest
 */
export interface PickupCancelRequest {
    /**
     * The pickup confirmation identifier
     * @type {string}
     * @memberof PickupCancelRequest
     */
    confirmation_number: string;
    /**
     * 
     * @type {PickupCancelRequestAddress}
     * @memberof PickupCancelRequest
     */
    address?: PickupCancelRequestAddress;
    /**
     * The pickup date.<br/>
     *         Date Format: `YYYY-MM-DD`
     *         
     * @type {string}
     * @memberof PickupCancelRequest
     */
    pickup_date?: string | null;
    /**
     * The reason of the pickup cancellation
     * @type {string}
     * @memberof PickupCancelRequest
     */
    reason?: string;
}

/**
 * Check if a given object implements the PickupCancelRequest interface.
 */
export function instanceOfPickupCancelRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "confirmation_number" in value;

    return isInstance;
}

export function PickupCancelRequestFromJSON(json: any): PickupCancelRequest {
    return PickupCancelRequestFromJSONTyped(json, false);
}

export function PickupCancelRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PickupCancelRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'confirmation_number': json['confirmation_number'],
        'address': !exists(json, 'address') ? undefined : PickupCancelRequestAddressFromJSON(json['address']),
        'pickup_date': !exists(json, 'pickup_date') ? undefined : json['pickup_date'],
        'reason': !exists(json, 'reason') ? undefined : json['reason'],
    };
}

export function PickupCancelRequestToJSON(value?: PickupCancelRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'confirmation_number': value.confirmation_number,
        'address': PickupCancelRequestAddressToJSON(value.address),
        'pickup_date': value.pickup_date,
        'reason': value.reason,
    };
}

