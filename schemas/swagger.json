{
    "swagger": "2.0",
    "info": {
        "title": "Purplship API",
        "description": "\n## API Reference\n\nPurplship is an open source multi-carrier shipping API that simplifies the integration of logistic carrier services.\n\nThe Purplship API is organized around REST. Our API has predictable resource-oriented URLs, accepts JSON-encoded \nrequest bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.\n\nThe Purplship API differs for every account as we release new versions.\nThese docs are customized to your version of the API.\n\n\n## Versioning\n\nWhen backwards-incompatible changes are made to the API, a new, dated version is released. \nThe current version is `2021.5`. \n\nRead our API changelog and to learn more about backwards compatibility.\n\nAs a precaution, use API versioning to check a new API version before committing to an upgrade.\n\n\n## Pagination\n\nAll top-level API resources have support for bulk fetches via \"list\" API methods. For instance, you can list addresses, \nlist shipments, and list trackers. These list API methods share a common structure, taking at least these \ntwo parameters: limit, and offset.\n\nPurplship utilizes offset-based pagination via the offset and limit parameters.\nBoth parameters take a number as value (see below) and return objects in reverse chronological order. \nThe offset parameter returns objects listed after an index. \nThe limit parameter take a limit on the number of objects to be returned from 1 to 100.\n\n\n```json\n{\n    \"next\": \"/v1/shipments?limit=25&offset=50\",\n    \"previous\": \"/v1/shipments?limit=25&offset=25\",\n    \"results\": [\n    ]\n}\n```\n\n## Environments\n\nThe Purplship API offer the possibility to create and retrieve certain objects in `test_mode`.\nIn development, it is therefore possible to add carrier connections, get live rates, \nbuy labels, create trackers and schedule pickups in `test_mode`.\n\n",
        "contact": {
            "email": "hello@purplship.com"
        },
        "version": "2021.5"
    },
    "host": "app.purplship.com",
    "schemes": [
        "https"
    ],
    "basePath": "/",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "Token": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "\nAPI keys are used to authenticate requests. You can view and manage your API keys in the Dashboard.\n\nYour API keys carry many privileges, so be sure to keep them secure! Do not share your secret \nAPI keys in publicly accessible areas such as GitHub, client-side code, and so forth.\n\nAuthentication to the API is performed via HTTP Bearer Auth. You do not need to provide a password.\nTo authenticate via bearer auth (e.g., for a cross-origin request), \nuse `-H \"Authorization: Token 19707922d97cef7a5d5e17c331ceeff66f226660\"`.\n\nAPI requests without authentication will also fail.\n"
        }
    },
    "security": [
        {
            "Token": []
        }
    ],
    "paths": {
        "/api/token": {
            "post": {
                "operationId": "&&authenticate",
                "summary": "Obtain auth token pair",
                "description": "Authenticate the user and return a token pair",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TokenObtainPair"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TokenPair"
                        }
                    }
                },
                "tags": [
                    "API"
                ]
            },
            "parameters": []
        },
        "/api/token/refresh": {
            "post": {
                "operationId": "&&refresh_token",
                "summary": "Refresh auth token",
                "description": "Authenticate the user and return a token pair",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TokenRefresh"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AccessToken"
                        }
                    }
                },
                "tags": [
                    "API"
                ]
            },
            "parameters": []
        },
        "/api/token/verify": {
            "post": {
                "operationId": "&&verify_token",
                "summary": "Verify auth token",
                "description": "Verify an existent authentication token",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TokenVerify"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                },
                "tags": [
                    "API"
                ]
            },
            "parameters": []
        },
        "/v1/addresses": {
            "get": {
                "operationId": "$list",
                "summary": "List all addresses",
                "description": "Retrieve all addresses.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AddressList"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Addresses"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request GET \\\n  --url '/v1/addresses' \\\n  --header 'Authorization: Token <API_KEY>'\n"
                    }
                ]
            },
            "post": {
                "operationId": "$create",
                "summary": "Create an address",
                "description": "Create a new address.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddressData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Addresses"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request POST \\\n  --url /v1/addresses \\\n  --header 'Authorization: Token <API_KEY>' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"address_line1\": \"125 Church St\",\n    \"person_name\": \"John Doe\",\n    \"company_name\": \"A corp.\",\n    \"phone_number\": \"+1 514 000 0000\",\n    \"city\": \"Moncton\",\n    \"country_code\": \"CA\",\n    \"postal_code\": \"E1C4Z8\",\n    \"residential\": false,\n    \"state_code\": \"NB\"\n}'\n"
                    }
                ]
            },
            "parameters": []
        },
        "/v1/addresses/{id}": {
            "get": {
                "operationId": "$retrieve",
                "summary": "Retrieve an address",
                "description": "Retrieve an address.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Addresses"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request GET \\\n  --url /v1/addresses/<ADDRESS_ID> \\\n  --header 'Authorization: Token <API_KEY>'\n"
                    }
                ]
            },
            "patch": {
                "operationId": "$update",
                "summary": "Update an address",
                "description": "update an address.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddressData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Addresses"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request PATCH \\\n  --url /v1/addresses/<ADDRESS_ID> \\\n  --header 'Authorization: Token <API_KEY>' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"city\": \"Pierrefonds\"\n}'\n"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/carriers": {
            "get": {
                "operationId": "&&list",
                "summary": "List all carriers",
                "description": "Returns the list of configured carriers",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "carrier_name",
                        "in": "query",
                        "description": "Indicates a carrier (type)",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "aramex",
                            "australiapost",
                            "canadapost",
                            "canpar",
                            "dhl_express",
                            "dhl_universal",
                            "dicom",
                            "fedex",
                            "purolator_courier",
                            "royalmail",
                            "sendle",
                            "sf_express",
                            "tnt",
                            "ups",
                            "usps",
                            "yanwen",
                            "yunexpress",
                            "eshipper",
                            "freightcom"
                        ]
                    },
                    {
                        "name": "test",
                        "in": "query",
                        "description": "This flag filter out carriers in test or prod mode",
                        "required": false,
                        "type": "boolean",
                        "x-nullable": true
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "This flag indicates whether to return active carriers only",
                        "required": false,
                        "type": "boolean",
                        "x-nullable": true
                    },
                    {
                        "name": "system_only",
                        "in": "query",
                        "description": "This flag indicates that only system carriers should be returned",
                        "required": false,
                        "type": "boolean",
                        "default": false,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CarrierList"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Carriers"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request GET                   --url '/v1/carriers' \\\n  --header 'Authorization: Token <API_KEY>'\n"
                    }
                ]
            },
            "parameters": []
        },
        "/v1/customs_info": {
            "get": {
                "operationId": "$$list",
                "summary": "List all customs info",
                "description": "Retrieve all stored customs declarations.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomsList"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Customs"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request GET \\\n  --url '/v1/customs_info' \\\n  --header 'Authorization: Token <API_KEY>'\n"
                    }
                ]
            },
            "post": {
                "operationId": "$$create",
                "summary": "Create a customs info",
                "description": "Create a new customs declaration.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomsData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Customs"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Customs"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request POST \\\n  --url /v1/customs_info \\\n  --header 'Authorization: Token <API_KEY>' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"content_type\": \"merchandise\",\n    \"incoterm\": \"DDU\",\n    \"commodities\": [\n      {\n        \"weight\": 2,\n        \"weight_unit\": \"KG\",\n        \"quantity\": 1,\n        \"sku\": \"XXXXX0000123\",\n        \"value_amount\": 30,\n        \"value_currency\": \"USD\",\n        \"origin_country\": \"JM\"\n      }\n    ],\n    \"duty\": {\n      \"paid_by\": \"recipient\",\n      \"currency\": \"USD\",\n      \"declared_value\": 60,\n    },\n    \"certify\": true,\n    \"signer\": \"Kex\",\n  }'\n"
                    }
                ]
            },
            "parameters": []
        },
        "/v1/customs_info/{id}": {
            "get": {
                "operationId": "$$retrieve",
                "summary": "Retrieve a customs info",
                "description": "Retrieve customs declaration.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Customs"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Customs"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request GET \\\n  --url /v1/customs_info/<CUSTOMS_INFO_ID> \\\n  --header 'Authorization: Token <API_KEY>'\n"
                    }
                ]
            },
            "patch": {
                "operationId": "$$update",
                "summary": "Update a customs info",
                "description": "modify an existing customs declaration.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomsData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Customs"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Customs"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request PATCH \\\n  --url /v1/customs_info/<CUSTOMS_INFO_ID> \\\n  --header 'Authorization: Token <API_KEY>' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"content_type\": \"merchandise\",\n    \"duty\": {\n      \"paid_by\": \"recipient\",\n      \"currency\": \"CAD\",\n      \"declared_value\": 100,\n    }\n  }'\n"
                    }
                ]
            },
            "delete": {
                "operationId": "$$discard",
                "summary": "Discard a customs info",
                "description": "Discard a customs declaration.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Operation"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Customs"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request DELETE \\\n  --url /v1/customs_info/<CUSTOMS_INFO_ID> \\\n  --header 'Authorization: Token <API_KEY>'\n"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/customs_info/{id}/commodities": {
            "post": {
                "operationId": "$$add_commodity",
                "summary": "Add a commodity",
                "description": "Add a customs commodity.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CommodityData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Customs"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Customs"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request POST \\\n  --url /v1/customs_info/<CUSTOMS_INFO_ID>/commodities \\\n  --header 'Authorization: Token <API_KEY>' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"weight\": 1,\n    \"weight_unit\": \"KG\",\n    \"quantity\": 1,\n    \"sku\": \"XXXXX0000123\",\n    \"value_amount\": 25,\n    \"value_currency\": \"USD\",\n    \"origin_country\": \"CA\"\n  }'\n"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/customs_info/{id}/commodities/{ck}": {
            "delete": {
                "operationId": "$$discard_commodity",
                "summary": "Discard a commodity",
                "description": "Discard a customs commodity.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Operation"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Customs"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request DELETE \\\n  --url /v1/customs_info/<CUSTOMS_INFO_ID>/commodities/<COMMODITY_ID> \\\n  --header 'Authorization: Token <API_KEY>'\n"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "ck",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/parcels": {
            "get": {
                "operationId": "$$$list",
                "summary": "List all parcels",
                "description": "Retrieve all stored parcels.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ParcelList"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Parcels"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request GET \\\n  --url '/v1/parcels' \\\n  --header 'Authorization: Token <API_KEY>'\n"
                    }
                ]
            },
            "post": {
                "operationId": "$$$create",
                "summary": "Create a parcel",
                "description": "Create a new parcel.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ParcelData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Parcel"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Parcels"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request POST \\\n    --url /v1/parcels \\\n    --header 'Authorization: Token <API_KEY>' \\\n    --header 'Content-Type: application/json' \\\n    --data '{\n      \"weight\": 1,\n      \"weight_unit\": \"KG\",\n      \"package_preset\": \"canadapost_corrugated_small_box\"\n    }'\n"
                    }
                ]
            },
            "parameters": []
        },
        "/v1/parcels/{id}": {
            "get": {
                "operationId": "$$$retrieve",
                "summary": "Retrieve a parcel",
                "description": "Retrieve a parcel.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Parcel"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Parcels"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request GET \\\n  --url /v1/parcels/<PARCEL_ID> \\\n  --header 'Authorization: Token <API_KEY>'\n"
                    }
                ]
            },
            "patch": {
                "operationId": "$$$update",
                "summary": "Update a parcel",
                "description": "modify an existing parcel's details.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ParcelData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Parcel"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Parcels"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request PATCH \\\n    --url /v1/parcels/<PARCEL_ID> \\\n    --header 'Authorization: Token <API_KEY>' \\\n    --header 'Content-Type: application/json' \\\n    --data '{\n      \"weight\": 1.2,\n    }'\n"
                    }
                ]
            },
            "delete": {
                "operationId": "$$$discard",
                "summary": "Remove a parcel",
                "description": "Remove a parcel.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Operation"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Parcels"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request DELETE \\\n    --url /v1/parcels/<PARCEL_ID> \\\n    --header 'Authorization: Token <API_KEY>'\n"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/pickups": {
            "get": {
                "operationId": "$$$$list",
                "summary": "List shipment pickups",
                "description": "Retrieve all scheduled pickups.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "test_mode",
                        "in": "query",
                        "description": "This flag filter out pickup created from carriers in test or live mode",
                        "required": false,
                        "type": "boolean",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PickupList"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Pickups"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request GET \\\n  --url '/v1/pickups' \\\n  --header 'Authorization: Token <API_KEY>'\n"
                    }
                ]
            },
            "parameters": []
        },
        "/v1/pickups/{carrier_name}/schedule": {
            "post": {
                "operationId": "$$$$schedule",
                "summary": "Schedule a pickup",
                "description": "Schedule a pickup for one or many shipments with labels already purchased.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PickupData"
                        }
                    },
                    {
                        "name": "test",
                        "in": "query",
                        "description": "The test flag indicates whether to use a carrier configured for test.",
                        "required": false,
                        "type": "boolean",
                        "default": false,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Pickup"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Pickups"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request POST \\\n  --url /v1/pickups/<PICKUP_ID> \\\n  --header 'Authorization: Token <API_KEY>' \\\n  --data '{\n    \"pickup_date\": \"2020-10-25\",\n    \"address\": {\n      \"address_line1\": \"125 Church St\",\n      \"person_name\": \"John Doe\",\n      \"city\": \"Moncton\",\n      \"country_code\": \"CA\",\n      \"postal_code\": \"E1C4Z8\",\n      \"state_code\": \"NB\",\n    },\n    \"ready_time\": \"13:00\",\n    \"closing_time\": \"17:00\",\n    \"instruction\": \"Should not be folded\",\n    \"package_location\": \"At the main entrance hall\",\n    \"tracking_numbers\": [\n        \"8545763607864201002\"\n    ]\n}'\n"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "carrier_name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/pickups/{id}": {
            "get": {
                "operationId": "$$$$retrieve",
                "summary": "Retrieve a pickup",
                "description": "Retrieve a scheduled pickup.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Pickup"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Pickups"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request GET \\\n  --url /v1/pickups/<PICKUP_ID> \\\n  --header 'Authorization: Token <API_KEY>'\n"
                    }
                ]
            },
            "patch": {
                "operationId": "$$$$update",
                "summary": "Update a pickup",
                "description": "Modify a pickup for one or many shipments with labels already purchased.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PickupUpdateData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OperationConfirmation"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Pickups"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request PATCH \\\n  --url /v1/pickups/<PICKUP_ID> \\\n  --header 'Authorization: Token <API_KEY>' \\\n  --data '{\n    \"address\": {\n      \"phone_number\": \"514-000-0000\",\n      \"residential\": false,\n      \"email\": \"john@a.com\"\n    },\n    \"ready_time\": \"13:00\",\n    \"closing_time\": \"20:00\",\n}'\n"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/pickups/{id}/cancel": {
            "post": {
                "operationId": "$$$$cancel",
                "summary": "Cancel a pickup",
                "description": "Cancel a pickup of one or more shipments.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PickupCancelData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OperationConfirmation"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Pickups"
                ],
                "x-code-samples": [
                    {
                        "lang": "bash",
                        "source": "\ncurl --request POST \\\n  --url /v1/pickups/<PICKUP_ID> \\\n  --header 'Authorization: Token <API_KEY>'\n"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/proxy/pickups/{carrier_name}": {
            "post": {
                "operationId": "@schedule_pickup",
                "summary": "Schedule a pickup",
                "description": "Schedule one or many parcels pickup",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PickupRequest"
                        }
                    },
                    {
                        "name": "test",
                        "in": "query",
                        "description": "The test flag indicates whether to use a carrier configured for test.",
                        "required": false,
                        "type": "boolean",
                        "default": false,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PickupResponse"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Proxy"
                ]
            },
            "put": {
                "operationId": "@update_pickup",
                "summary": "Update a pickup",
                "description": "Modify a scheduled pickup",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PickupUpdateRequest"
                        }
                    },
                    {
                        "name": "test",
                        "in": "query",
                        "description": "The test flag indicates whether to use a carrier configured for test.",
                        "required": false,
                        "type": "boolean",
                        "default": false,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PickupResponse"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Proxy"
                ]
            },
            "parameters": [
                {
                    "name": "carrier_name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/proxy/pickups/{carrier_name}/cancel": {
            "post": {
                "operationId": "@cancel_pickup",
                "summary": "Cancel a pickup",
                "description": "Cancel a pickup previously scheduled",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PickupCancelRequest"
                        }
                    },
                    {
                        "name": "test",
                        "in": "query",
                        "description": "The test flag indicates whether to use a carrier configured for test.",
                        "required": false,
                        "type": "boolean",
                        "default": false,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OperationResponse"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Proxy"
                ]
            },
            "parameters": [
                {
                    "name": "carrier_name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/proxy/rates": {
            "post": {
                "operationId": "@@fetch_rates",
                "summary": "Fetch shipment rates",
                "description": "\nThe Shipping process begins by fetching rates for your shipment.\nUse this service to fetch a shipping rates available.\n",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RateResponse"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Proxy"
                ]
            },
            "parameters": []
        },
        "/v1/proxy/shipping": {
            "post": {
                "operationId": "@@@buy_label",
                "summary": "Buy a shipment label",
                "description": "Once the shipping rates are retrieved, provide the required info to\nsubmit the shipment by specifying your preferred rate.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ShippingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Shipment"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Proxy"
                ]
            },
            "parameters": []
        },
        "/v1/proxy/shipping/{carrier_name}/cancel": {
            "post": {
                "operationId": "@@@void_label",
                "summary": "Void a shipment label",
                "description": "Cancel a shipment and the label previously created",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ShipmentCancelRequest"
                        }
                    },
                    {
                        "name": "test",
                        "in": "query",
                        "description": "The test flag indicates whether to use a carrier configured for test.",
                        "required": false,
                        "type": "boolean",
                        "default": false,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OperationResponse"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Proxy"
                ]
            },
            "parameters": [
                {
                    "name": "carrier_name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/proxy/tracking/{carrier_name}/{tracking_number}": {
            "get": {
                "operationId": "@@@@track_shipment",
                "summary": "Track a shipment",
                "description": "You can track a shipment by specifying the carrier and the shipment tracking number.",
                "parameters": [
                    {
                        "name": "test",
                        "in": "query",
                        "description": "The test flag indicates whether to use a carrier configured for test.",
                        "required": false,
                        "type": "boolean",
                        "default": false,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TrackingResponse"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Proxy"
                ]
            },
            "parameters": [
                {
                    "name": "carrier_name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "tracking_number",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/references": {
            "get": {
                "operationId": "&&data",
                "summary": "Data References",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/References"
                        }
                    }
                },
                "tags": [
                    "API"
                ]
            },
            "parameters": []
        },
        "/v1/shipments": {
            "get": {
                "operationId": "$$$$$list",
                "summary": "List all shipments",
                "description": "Retrieve all shipments.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "test_mode",
                        "in": "query",
                        "description": "This flag filter out shipment created in test or prod mode",
                        "required": false,
                        "type": "boolean",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ShipmentList"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Shipments"
                ]
            },
            "post": {
                "operationId": "$$$$$create",
                "summary": "Create a shipment",
                "description": "Create a new shipment instance.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ShipmentData"
                        }
                    },
                    {
                        "name": "test",
                        "in": "query",
                        "description": "Create shipment in test or prod mode",
                        "required": false,
                        "type": "boolean",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Shipment"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Shipments"
                ]
            },
            "parameters": []
        },
        "/v1/shipments/{id}": {
            "get": {
                "operationId": "$$$$$retrieve",
                "summary": "Retrieve a shipment",
                "description": "Retrieve a shipment.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Shipment"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Shipments"
                ]
            },
            "delete": {
                "operationId": "$$$$$cancel",
                "summary": "Cancel a shipment",
                "description": "Void a shipment with the associated label.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OperationResponse"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Shipments"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/shipments/{id}/customs": {
            "post": {
                "operationId": "$$$$$add_customs",
                "summary": "Add a customs declaration",
                "description": "Add the customs declaration for the shipment if non existent.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomsData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Shipment"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Shipments"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/shipments/{id}/options": {
            "post": {
                "operationId": "$$$$$set_options",
                "summary": "Add shipment options",
                "description": "Add one or many options to your shipment.<br/>\n**eg:**<br/>\n- add shipment **insurance**\n- specify the preferred transaction **currency**\n- setup a **cash collected on delivery** option\n\n```json\n{\n    \"insurance\": 120,\n    \"currency\": \"USD\"\n}\n```\n\nAnd many more, check additional options available in the [reference](#operation/all_references).",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "title": "options",
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Shipment"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Shipments"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/shipments/{id}/parcels": {
            "post": {
                "operationId": "$$$$$add_parcel",
                "summary": "Add a shipment parcel",
                "description": "Add a parcel to an existing shipment for a multi-parcel shipment.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ParcelData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Shipment"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Shipments"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/shipments/{id}/purchase": {
            "post": {
                "operationId": "$$$$$purchase",
                "summary": "Buy a shipment label",
                "description": "Select your preferred rates to buy a shipment label.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ShipmentPurchaseData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Shipment"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Shipments"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/shipments/{id}/rates": {
            "get": {
                "operationId": "$$$$$rates",
                "summary": "Fetch new shipment rates",
                "description": "Refresh the list of the shipment rates",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Shipment"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Shipments"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/trackers": {
            "get": {
                "operationId": "$$$$$$list",
                "summary": "List all shipment trackers",
                "description": "Retrieve all shipment trackers.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "test_mode",
                        "in": "query",
                        "description": "This flag filter out tracker created from carriers in test or live mode",
                        "required": false,
                        "type": "boolean",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TrackerList"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Trackers"
                ]
            },
            "parameters": []
        },
        "/v1/trackers/{carrier_name}/{tracking_number}": {
            "get": {
                "operationId": "$$$$$$create",
                "summary": "Create a shipment tracker",
                "description": "This API creates or retrieves (if existent) a tracking status object containing the\ndetails and events of a shipping in progress.",
                "parameters": [
                    {
                        "name": "test",
                        "in": "query",
                        "description": "The test flag indicates whether to use a carrier configured for test.",
                        "required": false,
                        "type": "boolean",
                        "default": false,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TrackingStatus"
                        }
                    },
                    "404": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Trackers"
                ]
            },
            "parameters": [
                {
                    "name": "carrier_name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "tracking_number",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/trackers/{id_or_tracking_number}": {
            "get": {
                "operationId": "$$$$$$retrieves",
                "summary": "Retrieves a shipment tracker",
                "description": "Retrieve a shipment tracker",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TrackingStatus"
                        }
                    },
                    "404": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Trackers"
                ]
            },
            "delete": {
                "operationId": "$$$$$$remove",
                "summary": "Discard a shipment tracker",
                "description": "Discard a shipment tracker.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Operation"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Trackers"
                ]
            },
            "parameters": [
                {
                    "name": "id_or_tracking_number",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v1/webhooks": {
            "get": {
                "operationId": "$$$$$$$list",
                "summary": "List all webhooks",
                "description": "Retrieve all webhooks.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "test_mode",
                        "in": "query",
                        "description": "This flag filter out webhooks created in test or live mode",
                        "required": false,
                        "type": "boolean",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WebhookList"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Webhooks"
                ]
            },
            "post": {
                "operationId": "$$$$$$$create",
                "summary": "Create a webhook",
                "description": "Create a new webhook.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WebhookData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Webhook"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Webhooks"
                ]
            },
            "parameters": []
        },
        "/v1/webhooks/{id}": {
            "get": {
                "operationId": "$$$$$$$retrieve",
                "summary": "Retrieve a webhook",
                "description": "Retrieve a webhook.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Webhook"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Webhooks"
                ]
            },
            "patch": {
                "operationId": "$$$$$$$update",
                "summary": "Update a webhook",
                "description": "update a webhook.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WebhookData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Webhook"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Webhooks"
                ]
            },
            "delete": {
                "operationId": "$$$$$$$remove",
                "summary": "Remove a webhook",
                "description": "Remove a webhook.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Operation"
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "tags": [
                    "Webhooks"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        }
    },
    "definitions": {
        "TokenObtainPair": {
            "required": [
                "email",
                "password"
            ],
            "type": "object",
            "properties": {
                "email": {
                    "title": "Email",
                    "type": "string",
                    "minLength": 1
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "minLength": 1
                },
                "org_id": {
                    "title": "Org id",
                    "description": "\n**should be specified only in a multi-org deployment.**\n\nNote the first org related to the user is selected by default.\n",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "TokenPair": {
            "required": [
                "access",
                "refresh"
            ],
            "type": "object",
            "properties": {
                "access": {
                    "title": "Access",
                    "type": "string",
                    "minLength": 1
                },
                "refresh": {
                    "title": "Refresh",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "TokenRefresh": {
            "required": [
                "refresh"
            ],
            "type": "object",
            "properties": {
                "refresh": {
                    "title": "Refresh",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "AccessToken": {
            "required": [
                "access"
            ],
            "type": "object",
            "properties": {
                "access": {
                    "title": "Access",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "TokenVerify": {
            "required": [
                "token"
            ],
            "type": "object",
            "properties": {
                "token": {
                    "title": "Token",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "AddressValidation": {
            "description": "Specify address validation result",
            "required": [
                "success"
            ],
            "type": "object",
            "properties": {
                "success": {
                    "title": "Success",
                    "description": "True if the address is valid",
                    "type": "boolean"
                },
                "meta": {
                    "title": "Meta",
                    "description": "validation service details",
                    "type": "object",
                    "additionalProperties": true,
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "Address": {
            "required": [
                "country_code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "A unique identifier",
                    "type": "string",
                    "minLength": 1
                },
                "postal_code": {
                    "title": "Postal code",
                    "description": "\nThe address postal code\n\n**(required for shipment purchase)**\n",
                    "type": "string",
                    "x-nullable": true
                },
                "city": {
                    "title": "City",
                    "description": "\nThe address city.\n\n**(required for shipment purchase)**\n",
                    "type": "string",
                    "x-nullable": true
                },
                "federal_tax_id": {
                    "title": "Federal tax id",
                    "description": "The party frederal tax id",
                    "type": "string",
                    "x-nullable": true
                },
                "state_tax_id": {
                    "title": "State tax id",
                    "description": "The party state id",
                    "type": "string",
                    "x-nullable": true
                },
                "person_name": {
                    "title": "Person name",
                    "description": "\nattention to\n\n**(required for shipment purchase)**\n",
                    "type": "string",
                    "x-nullable": true
                },
                "company_name": {
                    "title": "Company name",
                    "description": "The company name if the party is a company",
                    "type": "string",
                    "x-nullable": true
                },
                "country_code": {
                    "title": "Country code",
                    "description": "The address country code",
                    "type": "string",
                    "enum": [
                        "AD",
                        "AE",
                        "AF",
                        "AG",
                        "AI",
                        "AL",
                        "AM",
                        "AN",
                        "AO",
                        "AR",
                        "AS",
                        "AT",
                        "AU",
                        "AW",
                        "AZ",
                        "BA",
                        "BB",
                        "BD",
                        "BE",
                        "BF",
                        "BG",
                        "BH",
                        "BI",
                        "BJ",
                        "BM",
                        "BN",
                        "BO",
                        "BR",
                        "BS",
                        "BT",
                        "BW",
                        "BY",
                        "BZ",
                        "CA",
                        "CD",
                        "CF",
                        "CG",
                        "CH",
                        "CI",
                        "CK",
                        "CL",
                        "CM",
                        "CN",
                        "CO",
                        "CR",
                        "CU",
                        "CV",
                        "CY",
                        "CZ",
                        "DE",
                        "DJ",
                        "DK",
                        "DM",
                        "DO",
                        "DZ",
                        "EC",
                        "EE",
                        "EG",
                        "ER",
                        "ES",
                        "ET",
                        "FI",
                        "FJ",
                        "FK",
                        "FM",
                        "FO",
                        "FR",
                        "GA",
                        "GB",
                        "GD",
                        "GE",
                        "GF",
                        "GG",
                        "GH",
                        "GI",
                        "GL",
                        "GM",
                        "GN",
                        "GP",
                        "GQ",
                        "GR",
                        "GT",
                        "GU",
                        "GW",
                        "GY",
                        "HK",
                        "HN",
                        "HR",
                        "HT",
                        "HU",
                        "IC",
                        "ID",
                        "IE",
                        "IL",
                        "IN",
                        "IQ",
                        "IR",
                        "IS",
                        "IT",
                        "JE",
                        "JM",
                        "JO",
                        "JP",
                        "KE",
                        "KG",
                        "KH",
                        "KI",
                        "KM",
                        "KN",
                        "KP",
                        "KR",
                        "KV",
                        "KW",
                        "KY",
                        "KZ",
                        "LA",
                        "LB",
                        "LC",
                        "LI",
                        "LK",
                        "LR",
                        "LS",
                        "LT",
                        "LU",
                        "LV",
                        "LY",
                        "MA",
                        "MC",
                        "MD",
                        "ME",
                        "MG",
                        "MH",
                        "MK",
                        "ML",
                        "MM",
                        "MN",
                        "MO",
                        "MP",
                        "MQ",
                        "MR",
                        "MS",
                        "MT",
                        "MU",
                        "MV",
                        "MW",
                        "MX",
                        "MY",
                        "MZ",
                        "NA",
                        "NC",
                        "NE",
                        "NG",
                        "NI",
                        "NL",
                        "NO",
                        "NP",
                        "NR",
                        "NU",
                        "NZ",
                        "OM",
                        "PA",
                        "PE",
                        "PF",
                        "PG",
                        "PH",
                        "PK",
                        "PL",
                        "PR",
                        "PT",
                        "PW",
                        "PY",
                        "QA",
                        "RE",
                        "RO",
                        "RS",
                        "RU",
                        "RW",
                        "SA",
                        "SB",
                        "SC",
                        "SD",
                        "SE",
                        "SG",
                        "SH",
                        "SI",
                        "SK",
                        "SL",
                        "SM",
                        "SN",
                        "SO",
                        "SR",
                        "SS",
                        "ST",
                        "SV",
                        "SY",
                        "SZ",
                        "TC",
                        "TD",
                        "TG",
                        "TH",
                        "TJ",
                        "TL",
                        "TN",
                        "TO",
                        "TR",
                        "TT",
                        "TV",
                        "TW",
                        "TZ",
                        "UA",
                        "UG",
                        "US",
                        "UY",
                        "UZ",
                        "VA",
                        "VC",
                        "VE",
                        "VG",
                        "VI",
                        "VN",
                        "VU",
                        "WS",
                        "XB",
                        "XC",
                        "XE",
                        "XM",
                        "XN",
                        "XS",
                        "XY",
                        "YE",
                        "YT",
                        "ZA",
                        "ZM",
                        "ZW"
                    ]
                },
                "email": {
                    "title": "Email",
                    "description": "The party email",
                    "type": "string",
                    "x-nullable": true
                },
                "phone_number": {
                    "title": "Phone number",
                    "description": "The party phone number.",
                    "type": "string",
                    "x-nullable": true
                },
                "state_code": {
                    "title": "State code",
                    "description": "The address state code",
                    "type": "string",
                    "x-nullable": true
                },
                "suburb": {
                    "title": "Suburb",
                    "description": "The address suburb if known",
                    "type": "string",
                    "x-nullable": true
                },
                "residential": {
                    "title": "Residential",
                    "description": "Indicate if the address is residential or commercial (enterprise)",
                    "type": "boolean",
                    "default": false,
                    "x-nullable": true
                },
                "address_line1": {
                    "title": "Address line1",
                    "description": "\nThe address line with street number <br/>\n**(required for shipment purchase)**\n",
                    "type": "string",
                    "x-nullable": true
                },
                "address_line2": {
                    "title": "Address line2",
                    "description": "The address line with suite number",
                    "type": "string",
                    "x-nullable": true
                },
                "validate_location": {
                    "title": "Validate location",
                    "description": "Indicate if the address should be validated",
                    "type": "boolean",
                    "default": false,
                    "x-nullable": true
                },
                "validation": {
                    "$ref": "#/definitions/AddressValidation"
                }
            }
        },
        "AddressList": {
            "required": [
                "results"
            ],
            "type": "object",
            "properties": {
                "next": {
                    "title": "Next",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                },
                "previous": {
                    "title": "Previous",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Address"
                    }
                }
            }
        },
        "Message": {
            "description": "The list of error messages",
            "type": "object",
            "properties": {
                "carrier_name": {
                    "title": "Carrier name",
                    "description": "The targeted carrier",
                    "type": "string",
                    "minLength": 1
                },
                "carrier_id": {
                    "title": "Carrier id",
                    "description": "The targeted carrier name (unique identifier)",
                    "type": "string",
                    "minLength": 1
                },
                "message": {
                    "title": "Message",
                    "description": "The error or warning message",
                    "type": "string",
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "description": "The message code",
                    "type": "string",
                    "minLength": 1
                },
                "details": {
                    "title": "Details",
                    "description": "any additional details",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    }
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "The list of error messages",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Message"
                    }
                }
            }
        },
        "AddressData": {
            "required": [
                "country_code"
            ],
            "type": "object",
            "properties": {
                "postal_code": {
                    "title": "Postal code",
                    "description": "\nThe address postal code\n\n**(required for shipment purchase)**\n",
                    "type": "string",
                    "x-nullable": true
                },
                "city": {
                    "title": "City",
                    "description": "\nThe address city.\n\n**(required for shipment purchase)**\n",
                    "type": "string",
                    "x-nullable": true
                },
                "federal_tax_id": {
                    "title": "Federal tax id",
                    "description": "The party frederal tax id",
                    "type": "string",
                    "x-nullable": true
                },
                "state_tax_id": {
                    "title": "State tax id",
                    "description": "The party state id",
                    "type": "string",
                    "x-nullable": true
                },
                "person_name": {
                    "title": "Person name",
                    "description": "\nattention to\n\n**(required for shipment purchase)**\n",
                    "type": "string",
                    "x-nullable": true
                },
                "company_name": {
                    "title": "Company name",
                    "description": "The company name if the party is a company",
                    "type": "string",
                    "x-nullable": true
                },
                "country_code": {
                    "title": "Country code",
                    "description": "The address country code",
                    "type": "string",
                    "enum": [
                        "AD",
                        "AE",
                        "AF",
                        "AG",
                        "AI",
                        "AL",
                        "AM",
                        "AN",
                        "AO",
                        "AR",
                        "AS",
                        "AT",
                        "AU",
                        "AW",
                        "AZ",
                        "BA",
                        "BB",
                        "BD",
                        "BE",
                        "BF",
                        "BG",
                        "BH",
                        "BI",
                        "BJ",
                        "BM",
                        "BN",
                        "BO",
                        "BR",
                        "BS",
                        "BT",
                        "BW",
                        "BY",
                        "BZ",
                        "CA",
                        "CD",
                        "CF",
                        "CG",
                        "CH",
                        "CI",
                        "CK",
                        "CL",
                        "CM",
                        "CN",
                        "CO",
                        "CR",
                        "CU",
                        "CV",
                        "CY",
                        "CZ",
                        "DE",
                        "DJ",
                        "DK",
                        "DM",
                        "DO",
                        "DZ",
                        "EC",
                        "EE",
                        "EG",
                        "ER",
                        "ES",
                        "ET",
                        "FI",
                        "FJ",
                        "FK",
                        "FM",
                        "FO",
                        "FR",
                        "GA",
                        "GB",
                        "GD",
                        "GE",
                        "GF",
                        "GG",
                        "GH",
                        "GI",
                        "GL",
                        "GM",
                        "GN",
                        "GP",
                        "GQ",
                        "GR",
                        "GT",
                        "GU",
                        "GW",
                        "GY",
                        "HK",
                        "HN",
                        "HR",
                        "HT",
                        "HU",
                        "IC",
                        "ID",
                        "IE",
                        "IL",
                        "IN",
                        "IQ",
                        "IR",
                        "IS",
                        "IT",
                        "JE",
                        "JM",
                        "JO",
                        "JP",
                        "KE",
                        "KG",
                        "KH",
                        "KI",
                        "KM",
                        "KN",
                        "KP",
                        "KR",
                        "KV",
                        "KW",
                        "KY",
                        "KZ",
                        "LA",
                        "LB",
                        "LC",
                        "LI",
                        "LK",
                        "LR",
                        "LS",
                        "LT",
                        "LU",
                        "LV",
                        "LY",
                        "MA",
                        "MC",
                        "MD",
                        "ME",
                        "MG",
                        "MH",
                        "MK",
                        "ML",
                        "MM",
                        "MN",
                        "MO",
                        "MP",
                        "MQ",
                        "MR",
                        "MS",
                        "MT",
                        "MU",
                        "MV",
                        "MW",
                        "MX",
                        "MY",
                        "MZ",
                        "NA",
                        "NC",
                        "NE",
                        "NG",
                        "NI",
                        "NL",
                        "NO",
                        "NP",
                        "NR",
                        "NU",
                        "NZ",
                        "OM",
                        "PA",
                        "PE",
                        "PF",
                        "PG",
                        "PH",
                        "PK",
                        "PL",
                        "PR",
                        "PT",
                        "PW",
                        "PY",
                        "QA",
                        "RE",
                        "RO",
                        "RS",
                        "RU",
                        "RW",
                        "SA",
                        "SB",
                        "SC",
                        "SD",
                        "SE",
                        "SG",
                        "SH",
                        "SI",
                        "SK",
                        "SL",
                        "SM",
                        "SN",
                        "SO",
                        "SR",
                        "SS",
                        "ST",
                        "SV",
                        "SY",
                        "SZ",
                        "TC",
                        "TD",
                        "TG",
                        "TH",
                        "TJ",
                        "TL",
                        "TN",
                        "TO",
                        "TR",
                        "TT",
                        "TV",
                        "TW",
                        "TZ",
                        "UA",
                        "UG",
                        "US",
                        "UY",
                        "UZ",
                        "VA",
                        "VC",
                        "VE",
                        "VG",
                        "VI",
                        "VN",
                        "VU",
                        "WS",
                        "XB",
                        "XC",
                        "XE",
                        "XM",
                        "XN",
                        "XS",
                        "XY",
                        "YE",
                        "YT",
                        "ZA",
                        "ZM",
                        "ZW"
                    ]
                },
                "email": {
                    "title": "Email",
                    "description": "The party email",
                    "type": "string",
                    "x-nullable": true
                },
                "phone_number": {
                    "title": "Phone number",
                    "description": "The party phone number.",
                    "type": "string",
                    "x-nullable": true
                },
                "state_code": {
                    "title": "State code",
                    "description": "The address state code",
                    "type": "string",
                    "x-nullable": true
                },
                "suburb": {
                    "title": "Suburb",
                    "description": "The address suburb if known",
                    "type": "string",
                    "x-nullable": true
                },
                "residential": {
                    "title": "Residential",
                    "description": "Indicate if the address is residential or commercial (enterprise)",
                    "type": "boolean",
                    "default": false,
                    "x-nullable": true
                },
                "address_line1": {
                    "title": "Address line1",
                    "description": "\nThe address line with street number <br/>\n**(required for shipment purchase)**\n",
                    "type": "string",
                    "x-nullable": true
                },
                "address_line2": {
                    "title": "Address line2",
                    "description": "The address line with suite number",
                    "type": "string",
                    "x-nullable": true
                },
                "validate_location": {
                    "title": "Validate location",
                    "description": "Indicate if the address should be validated",
                    "type": "boolean",
                    "default": false,
                    "x-nullable": true
                }
            }
        },
        "CarrierSettings": {
            "required": [
                "id",
                "carrier_name",
                "carrier_id",
                "test",
                "active"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "A unique address identifier",
                    "type": "string",
                    "minLength": 1
                },
                "carrier_name": {
                    "title": "Carrier name",
                    "description": "Indicates a carrier (type)",
                    "type": "string",
                    "enum": [
                        "aramex",
                        "australiapost",
                        "canadapost",
                        "canpar",
                        "dhl_express",
                        "dhl_universal",
                        "dicom",
                        "fedex",
                        "purolator_courier",
                        "royalmail",
                        "sendle",
                        "sf_express",
                        "tnt",
                        "ups",
                        "usps",
                        "yanwen",
                        "yunexpress",
                        "eshipper",
                        "freightcom"
                    ]
                },
                "carrier_id": {
                    "title": "Carrier id",
                    "description": "Indicates a specific carrier configuration name.",
                    "type": "string",
                    "minLength": 1
                },
                "test": {
                    "title": "Test",
                    "description": "\nThe test flag indicates whether to use a carrier configured for test. \n",
                    "type": "boolean"
                },
                "active": {
                    "title": "Active",
                    "description": "\nThe active flag indicates whether the carrier account is active or not. \n",
                    "type": "boolean"
                }
            }
        },
        "CarrierList": {
            "required": [
                "results"
            ],
            "type": "object",
            "properties": {
                "next": {
                    "title": "Next",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                },
                "previous": {
                    "title": "Previous",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CarrierSettings"
                    }
                }
            }
        },
        "Commodity": {
            "description": "The parcel content items",
            "required": [
                "weight",
                "weight_unit"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "A unique identifier",
                    "type": "string",
                    "minLength": 1
                },
                "weight": {
                    "title": "Weight",
                    "description": "The commodity's weight",
                    "type": "number"
                },
                "weight_unit": {
                    "title": "Weight unit",
                    "description": "The commodity's weight unit",
                    "type": "string",
                    "enum": [
                        "KG",
                        "LB"
                    ]
                },
                "description": {
                    "title": "Description",
                    "description": "A description of the commodity",
                    "type": "string",
                    "x-nullable": true
                },
                "quantity": {
                    "title": "Quantity",
                    "description": "The commodity's quantity (number or item)",
                    "type": "integer",
                    "x-nullable": true
                },
                "sku": {
                    "title": "Sku",
                    "description": "The commodity's sku number",
                    "type": "string",
                    "x-nullable": true
                },
                "value_amount": {
                    "title": "Value amount",
                    "description": "The monetary value of the commodity",
                    "type": "number",
                    "x-nullable": true
                },
                "value_currency": {
                    "title": "Value currency",
                    "description": "The currency of the commodity value amount",
                    "type": "string",
                    "x-nullable": true
                },
                "origin_country": {
                    "title": "Origin country",
                    "description": "The origin or manufacture country",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "Duty": {
            "description": "\nThe payment details.<br/>\nNote that this is required for a Dutiable parcel shipped internationally.\n",
            "type": "object",
            "properties": {
                "paid_by": {
                    "title": "Paid by",
                    "description": "The duty payer",
                    "type": "string",
                    "enum": [
                        "sender",
                        "recipient",
                        "third_party"
                    ],
                    "x-nullable": true
                },
                "currency": {
                    "title": "Currency",
                    "description": "The declared value currency",
                    "type": "string",
                    "enum": [
                        "EUR",
                        "AED",
                        "USD",
                        "XCD",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "XOF",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "XAF",
                        "CHF",
                        "NZD",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "FJD",
                        "GBP",
                        "GEL",
                        "GHS",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "INR",
                        "IRR",
                        "ISK",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRO",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "XPF",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "OMR",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SRD",
                        "SSP",
                        "STD",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "YER",
                        "ZAR"
                    ],
                    "x-nullable": true
                },
                "declared_value": {
                    "title": "Declared value",
                    "description": "The package declared value",
                    "type": "number",
                    "x-nullable": true
                },
                "account_number": {
                    "title": "Account number",
                    "description": "The duty payment account number",
                    "type": "string",
                    "x-nullable": true
                },
                "bill_to": {
                    "$ref": "#/definitions/Address"
                }
            },
            "x-nullable": true
        },
        "Customs": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "A unique identifier",
                    "type": "string",
                    "minLength": 1
                },
                "aes": {
                    "title": "Aes",
                    "type": "string",
                    "x-nullable": true
                },
                "eel_pfc": {
                    "title": "Eel pfc",
                    "type": "string",
                    "x-nullable": true
                },
                "content_type": {
                    "title": "Content type",
                    "type": "string",
                    "enum": [
                        "documents",
                        "gift",
                        "sample",
                        "merchandise",
                        "return_merchandise",
                        "other"
                    ],
                    "x-nullable": true
                },
                "content_description": {
                    "title": "Content description",
                    "type": "string",
                    "x-nullable": true
                },
                "incoterm": {
                    "title": "Incoterm",
                    "description": "The customs 'term of trade' also known as 'incoterm'",
                    "type": "string",
                    "enum": [
                        "CFR",
                        "CIF",
                        "CIP",
                        "CPT",
                        "DAF",
                        "DDP",
                        "DDU",
                        "DEQ",
                        "DES",
                        "EXW",
                        "FAS",
                        "FCA",
                        "FOB"
                    ],
                    "x-nullable": true
                },
                "commodities": {
                    "description": "The parcel content items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Commodity"
                    },
                    "x-nullable": true
                },
                "duty": {
                    "$ref": "#/definitions/Duty"
                },
                "invoice": {
                    "title": "Invoice",
                    "description": "The invoice reference number",
                    "type": "string",
                    "x-nullable": true
                },
                "invoice_date": {
                    "title": "Invoice date",
                    "description": "The invoice date",
                    "type": "string",
                    "x-nullable": true
                },
                "commercial_invoice": {
                    "title": "Commercial invoice",
                    "description": "Indicates if the shipment is commercial",
                    "type": "boolean",
                    "x-nullable": true
                },
                "certify": {
                    "title": "Certify",
                    "description": "Indicate that signer certified confirmed all",
                    "type": "boolean",
                    "x-nullable": true
                },
                "signer": {
                    "title": "Signer",
                    "type": "string",
                    "x-nullable": true
                },
                "certificate_number": {
                    "title": "Certificate number",
                    "type": "string",
                    "x-nullable": true
                },
                "options": {
                    "title": "Options",
                    "type": "object",
                    "additionalProperties": true,
                    "x-nullable": true
                }
            }
        },
        "CustomsList": {
            "required": [
                "results"
            ],
            "type": "object",
            "properties": {
                "next": {
                    "title": "Next",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                },
                "previous": {
                    "title": "Previous",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Customs"
                    }
                }
            }
        },
        "CustomsData": {
            "type": "object",
            "properties": {
                "aes": {
                    "title": "Aes",
                    "type": "string",
                    "x-nullable": true
                },
                "eel_pfc": {
                    "title": "Eel pfc",
                    "type": "string",
                    "x-nullable": true
                },
                "content_type": {
                    "title": "Content type",
                    "type": "string",
                    "enum": [
                        "documents",
                        "gift",
                        "sample",
                        "merchandise",
                        "return_merchandise",
                        "other"
                    ],
                    "x-nullable": true
                },
                "content_description": {
                    "title": "Content description",
                    "type": "string",
                    "x-nullable": true
                },
                "incoterm": {
                    "title": "Incoterm",
                    "description": "The customs 'term of trade' also known as 'incoterm'",
                    "type": "string",
                    "enum": [
                        "CFR",
                        "CIF",
                        "CIP",
                        "CPT",
                        "DAF",
                        "DDP",
                        "DDU",
                        "DEQ",
                        "DES",
                        "EXW",
                        "FAS",
                        "FCA",
                        "FOB"
                    ],
                    "x-nullable": true
                },
                "commodities": {
                    "description": "The parcel content items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Commodity"
                    },
                    "x-nullable": true
                },
                "duty": {
                    "$ref": "#/definitions/Duty"
                },
                "invoice": {
                    "title": "Invoice",
                    "description": "The invoice reference number",
                    "type": "string",
                    "x-nullable": true
                },
                "invoice_date": {
                    "title": "Invoice date",
                    "description": "The invoice date",
                    "type": "string",
                    "x-nullable": true
                },
                "commercial_invoice": {
                    "title": "Commercial invoice",
                    "description": "Indicates if the shipment is commercial",
                    "type": "boolean",
                    "x-nullable": true
                },
                "certify": {
                    "title": "Certify",
                    "description": "Indicate that signer certified confirmed all",
                    "type": "boolean",
                    "x-nullable": true
                },
                "signer": {
                    "title": "Signer",
                    "type": "string",
                    "x-nullable": true
                },
                "certificate_number": {
                    "title": "Certificate number",
                    "type": "string",
                    "x-nullable": true
                },
                "options": {
                    "title": "Options",
                    "type": "object",
                    "additionalProperties": true,
                    "x-nullable": true
                }
            }
        },
        "Operation": {
            "required": [
                "operation",
                "success"
            ],
            "type": "object",
            "properties": {
                "operation": {
                    "title": "Operation",
                    "description": "Operation performed",
                    "type": "string",
                    "minLength": 1
                },
                "success": {
                    "title": "Success",
                    "description": "Specify whether the operation was successful",
                    "type": "boolean"
                }
            }
        },
        "CommodityData": {
            "required": [
                "weight",
                "weight_unit"
            ],
            "type": "object",
            "properties": {
                "weight": {
                    "title": "Weight",
                    "description": "The commodity's weight",
                    "type": "number"
                },
                "weight_unit": {
                    "title": "Weight unit",
                    "description": "The commodity's weight unit",
                    "type": "string",
                    "enum": [
                        "KG",
                        "LB"
                    ]
                },
                "description": {
                    "title": "Description",
                    "description": "A description of the commodity",
                    "type": "string",
                    "x-nullable": true
                },
                "quantity": {
                    "title": "Quantity",
                    "description": "The commodity's quantity (number or item)",
                    "type": "integer",
                    "x-nullable": true
                },
                "sku": {
                    "title": "Sku",
                    "description": "The commodity's sku number",
                    "type": "string",
                    "x-nullable": true
                },
                "value_amount": {
                    "title": "Value amount",
                    "description": "The monetary value of the commodity",
                    "type": "number",
                    "x-nullable": true
                },
                "value_currency": {
                    "title": "Value currency",
                    "description": "The currency of the commodity value amount",
                    "type": "string",
                    "x-nullable": true
                },
                "origin_country": {
                    "title": "Origin country",
                    "description": "The origin or manufacture country",
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "Parcel": {
            "required": [
                "weight",
                "weight_unit"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "A unique identifier",
                    "type": "string",
                    "minLength": 1
                },
                "weight": {
                    "title": "Weight",
                    "description": "The parcel's weight",
                    "type": "number"
                },
                "width": {
                    "title": "Width",
                    "description": "The parcel's width",
                    "type": "number",
                    "x-nullable": true
                },
                "height": {
                    "title": "Height",
                    "description": "The parcel's height",
                    "type": "number",
                    "x-nullable": true
                },
                "length": {
                    "title": "Length",
                    "description": "The parcel's length",
                    "type": "number",
                    "x-nullable": true
                },
                "packaging_type": {
                    "title": "Packaging type",
                    "description": "\nThe parcel's packaging type.\n\n**Note that the packaging is optional when using a package preset**\n\nvalues: <br/>- **envelope**<br/>- **pak**<br/>- **tube**<br/>- **pallet**<br/>- **small_box**<br/>- **medium_box**<br/>- **your_packaging**\n\nFor specific carriers packaging type, please consult [the reference](#operation/references).\n",
                    "type": "string",
                    "x-nullable": true
                },
                "package_preset": {
                    "title": "Package preset",
                    "description": "\nThe parcel's package preset.\n\nFor specific carriers package preset, please consult [the reference](#operation/references).\n",
                    "type": "string",
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "description": "The parcel's description",
                    "type": "string",
                    "x-nullable": true
                },
                "content": {
                    "title": "Content",
                    "description": "The parcel's content description",
                    "type": "string",
                    "x-nullable": true
                },
                "is_document": {
                    "title": "Is document",
                    "description": "Indicates if the parcel is composed of documents only",
                    "type": "boolean",
                    "default": false,
                    "x-nullable": true
                },
                "weight_unit": {
                    "title": "Weight unit",
                    "description": "The parcel's weight unit",
                    "type": "string",
                    "enum": [
                        "KG",
                        "LB"
                    ]
                },
                "dimension_unit": {
                    "title": "Dimension unit",
                    "description": "The parcel's dimension unit",
                    "type": "string",
                    "enum": [
                        "CM",
                        "IN"
                    ],
                    "x-nullable": true
                }
            }
        },
        "ParcelList": {
            "required": [
                "results"
            ],
            "type": "object",
            "properties": {
                "next": {
                    "title": "Next",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                },
                "previous": {
                    "title": "Previous",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Parcel"
                    }
                }
            }
        },
        "ParcelData": {
            "required": [
                "weight",
                "weight_unit"
            ],
            "type": "object",
            "properties": {
                "weight": {
                    "title": "Weight",
                    "description": "The parcel's weight",
                    "type": "number"
                },
                "width": {
                    "title": "Width",
                    "description": "The parcel's width",
                    "type": "number",
                    "x-nullable": true
                },
                "height": {
                    "title": "Height",
                    "description": "The parcel's height",
                    "type": "number",
                    "x-nullable": true
                },
                "length": {
                    "title": "Length",
                    "description": "The parcel's length",
                    "type": "number",
                    "x-nullable": true
                },
                "packaging_type": {
                    "title": "Packaging type",
                    "description": "\nThe parcel's packaging type.\n\n**Note that the packaging is optional when using a package preset**\n\nvalues: <br/>- **envelope**<br/>- **pak**<br/>- **tube**<br/>- **pallet**<br/>- **small_box**<br/>- **medium_box**<br/>- **your_packaging**\n\nFor specific carriers packaging type, please consult [the reference](#operation/references).\n",
                    "type": "string",
                    "x-nullable": true
                },
                "package_preset": {
                    "title": "Package preset",
                    "description": "\nThe parcel's package preset.\n\nFor specific carriers package preset, please consult [the reference](#operation/references).\n",
                    "type": "string",
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "description": "The parcel's description",
                    "type": "string",
                    "x-nullable": true
                },
                "content": {
                    "title": "Content",
                    "description": "The parcel's content description",
                    "type": "string",
                    "x-nullable": true
                },
                "is_document": {
                    "title": "Is document",
                    "description": "Indicates if the parcel is composed of documents only",
                    "type": "boolean",
                    "default": false,
                    "x-nullable": true
                },
                "weight_unit": {
                    "title": "Weight unit",
                    "description": "The parcel's weight unit",
                    "type": "string",
                    "enum": [
                        "KG",
                        "LB"
                    ]
                },
                "dimension_unit": {
                    "title": "Dimension unit",
                    "description": "The parcel's dimension unit",
                    "type": "string",
                    "enum": [
                        "CM",
                        "IN"
                    ],
                    "x-nullable": true
                }
            }
        },
        "Charge": {
            "description": "The pickup cost details",
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "description": "The charge description",
                    "type": "string",
                    "x-nullable": true
                },
                "amount": {
                    "title": "Amount",
                    "description": "The charge monetary value",
                    "type": "number",
                    "x-nullable": true
                },
                "currency": {
                    "title": "Currency",
                    "description": "The charge amount currency",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "Pickup": {
            "required": [
                "carrier_name",
                "carrier_id",
                "confirmation_number",
                "address",
                "parcels",
                "test_mode"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "A unique pickup identifier",
                    "type": "string",
                    "minLength": 1
                },
                "carrier_name": {
                    "title": "Carrier name",
                    "description": "The pickup carrier",
                    "type": "string",
                    "minLength": 1
                },
                "carrier_id": {
                    "title": "Carrier id",
                    "description": "The pickup carrier configured name",
                    "type": "string",
                    "minLength": 1
                },
                "confirmation_number": {
                    "title": "Confirmation number",
                    "description": "The pickup confirmation identifier",
                    "type": "string",
                    "minLength": 1
                },
                "pickup_date": {
                    "title": "Pickup date",
                    "description": "The pickup date",
                    "type": "string",
                    "minLength": 1,
                    "x-nullable": true
                },
                "pickup_charge": {
                    "$ref": "#/definitions/Charge"
                },
                "ready_time": {
                    "title": "Ready time",
                    "description": "The pickup expected ready time",
                    "type": "string",
                    "minLength": 1,
                    "x-nullable": true
                },
                "closing_time": {
                    "title": "Closing time",
                    "description": "The pickup expected closing or late time",
                    "type": "string",
                    "minLength": 1,
                    "x-nullable": true
                },
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "parcels": {
                    "description": "The shipment parcels to pickup.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Parcel"
                    },
                    "x-nullable": true
                },
                "instruction": {
                    "title": "Instruction",
                    "description": "\nThe pickup instruction.\n\neg: Handle with care.\n",
                    "type": "string",
                    "x-nullable": true
                },
                "package_location": {
                    "title": "Package location",
                    "description": "\nThe package(s) location.\n\neg: Behind the entrance door.\n",
                    "type": "string",
                    "x-nullable": true
                },
                "options": {
                    "title": "Options",
                    "description": "Advanced carrier specific pickup options",
                    "type": "object",
                    "additionalProperties": true,
                    "x-nullable": true
                },
                "test_mode": {
                    "title": "Test mode",
                    "description": "Specified whether it was created with a carrier in test mode",
                    "type": "boolean"
                }
            }
        },
        "PickupList": {
            "required": [
                "results"
            ],
            "type": "object",
            "properties": {
                "next": {
                    "title": "Next",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                },
                "previous": {
                    "title": "Previous",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Pickup"
                    }
                }
            }
        },
        "PickupData": {
            "required": [
                "pickup_date",
                "ready_time",
                "closing_time",
                "tracking_numbers"
            ],
            "type": "object",
            "properties": {
                "pickup_date": {
                    "title": "Pickup date",
                    "description": "\nThe expected pickup date\n\nDate Format: `YYYY-MM-DD`\n",
                    "type": "string",
                    "minLength": 1
                },
                "address": {
                    "$ref": "#/definitions/AddressData"
                },
                "ready_time": {
                    "title": "Ready time",
                    "description": "\nThe ready time for pickup.\n\nTime Format: `HH:MM`\n",
                    "type": "string",
                    "minLength": 1
                },
                "closing_time": {
                    "title": "Closing time",
                    "description": "\nThe closing or late time of the pickup\n\nTime Format: `HH:MM`\n",
                    "type": "string",
                    "minLength": 1
                },
                "instruction": {
                    "title": "Instruction",
                    "description": "\nThe pickup instruction.\n\neg: Handle with care.\n",
                    "type": "string",
                    "x-nullable": true
                },
                "package_location": {
                    "title": "Package location",
                    "description": "\nThe package(s) location.\n\neg: Behind the entrance door.\n",
                    "type": "string",
                    "x-nullable": true
                },
                "options": {
                    "title": "Options",
                    "description": "Advanced carrier specific pickup options",
                    "type": "object",
                    "additionalProperties": true,
                    "x-nullable": true
                },
                "tracking_numbers": {
                    "description": "The list of shipments to be picked up",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    }
                }
            }
        },
        "PickupUpdateData": {
            "required": [
                "confirmation_number"
            ],
            "type": "object",
            "properties": {
                "pickup_date": {
                    "title": "Pickup date",
                    "description": "\nThe expected pickup date\n\nDate Format: YYYY-MM-DD\n",
                    "type": "string",
                    "minLength": 1
                },
                "address": {
                    "$ref": "#/definitions/AddressData"
                },
                "ready_time": {
                    "title": "Ready time",
                    "description": "The ready time for pickup.",
                    "type": "string",
                    "x-nullable": true
                },
                "closing_time": {
                    "title": "Closing time",
                    "description": "The closing or late time of the pickup",
                    "type": "string",
                    "x-nullable": true
                },
                "instruction": {
                    "title": "Instruction",
                    "description": "\nThe pickup instruction.\n\neg: Handle with care.\n",
                    "type": "string",
                    "x-nullable": true
                },
                "package_location": {
                    "title": "Package location",
                    "description": "\nThe package(s) location.\n\neg: Behind the entrance door.\n",
                    "type": "string",
                    "x-nullable": true
                },
                "options": {
                    "title": "Options",
                    "description": "Advanced carrier specific pickup options",
                    "type": "object",
                    "additionalProperties": true,
                    "x-nullable": true
                },
                "tracking_numbers": {
                    "description": "The list of shipments to be picked up",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "confirmation_number": {
                    "title": "Confirmation number",
                    "description": "pickup identification number",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "OperationConfirmation": {
            "required": [
                "operation",
                "success",
                "carrier_name",
                "carrier_id"
            ],
            "type": "object",
            "properties": {
                "operation": {
                    "title": "Operation",
                    "description": "Operation performed",
                    "type": "string",
                    "minLength": 1
                },
                "success": {
                    "title": "Success",
                    "description": "Specify whether the operation was successful",
                    "type": "boolean"
                },
                "carrier_name": {
                    "title": "Carrier name",
                    "description": "The operation carrier",
                    "type": "string",
                    "minLength": 1
                },
                "carrier_id": {
                    "title": "Carrier id",
                    "description": "The targeted carrier's name (unique identifier)",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "PickupCancelData": {
            "type": "object",
            "properties": {
                "reason": {
                    "title": "Reason",
                    "description": "The reason of the pickup cancellation",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "PickupRequest": {
            "required": [
                "pickup_date",
                "address",
                "parcels",
                "ready_time",
                "closing_time"
            ],
            "type": "object",
            "properties": {
                "pickup_date": {
                    "title": "Pickup date",
                    "description": "\nThe expected pickup date\n\nDate Format: `YYYY-MM-DD`\n",
                    "type": "string",
                    "minLength": 1
                },
                "address": {
                    "$ref": "#/definitions/AddressData"
                },
                "parcels": {
                    "description": "The shipment parcels to pickup.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParcelData"
                    },
                    "x-nullable": true
                },
                "ready_time": {
                    "title": "Ready time",
                    "description": "\nThe ready time for pickup.\n\nTime Format: `HH:MM`\n",
                    "type": "string",
                    "minLength": 1
                },
                "closing_time": {
                    "title": "Closing time",
                    "description": "\nThe closing or late time of the pickup\n\nTime Format: `HH:MM`\n",
                    "type": "string",
                    "minLength": 1
                },
                "instruction": {
                    "title": "Instruction",
                    "description": "\nThe pickup instruction.\n\neg: Handle with care.\n",
                    "type": "string",
                    "x-nullable": true
                },
                "package_location": {
                    "title": "Package location",
                    "description": "\nThe package(s) location.\n\neg: Behind the entrance door.\n",
                    "type": "string",
                    "x-nullable": true
                },
                "options": {
                    "title": "Options",
                    "description": "Advanced carrier specific pickup options",
                    "type": "object",
                    "additionalProperties": true,
                    "x-nullable": true
                }
            }
        },
        "PickupResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "The list of note or warning messages",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Message"
                    }
                },
                "pickup": {
                    "$ref": "#/definitions/Pickup"
                }
            }
        },
        "PickupUpdateRequest": {
            "required": [
                "pickup_date",
                "address",
                "parcels",
                "confirmation_number",
                "ready_time",
                "closing_time"
            ],
            "type": "object",
            "properties": {
                "pickup_date": {
                    "title": "Pickup date",
                    "description": "\nThe expected pickup date\n\nDate Format: `YYYY-MM-DD`\n",
                    "type": "string",
                    "minLength": 1
                },
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "parcels": {
                    "description": "The shipment parcels to pickup.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Parcel"
                    },
                    "x-nullable": true
                },
                "confirmation_number": {
                    "title": "Confirmation number",
                    "description": "pickup identification number",
                    "type": "string",
                    "minLength": 1
                },
                "ready_time": {
                    "title": "Ready time",
                    "description": "\nThe ready time for pickup.\n\nTime Format: `HH:MM`\n",
                    "type": "string",
                    "minLength": 1
                },
                "closing_time": {
                    "title": "Closing time",
                    "description": "\nThe closing or late time of the pickup\n\nTime Format: `HH:MM`\n",
                    "type": "string",
                    "minLength": 1
                },
                "instruction": {
                    "title": "Instruction",
                    "description": "\nThe pickup instruction.\n\neg: Handle with care.\n",
                    "type": "string",
                    "x-nullable": true
                },
                "package_location": {
                    "title": "Package location",
                    "description": "\nThe package(s) location.\n\neg: Behind the entrance door.\n",
                    "type": "string",
                    "x-nullable": true
                },
                "options": {
                    "title": "Options",
                    "description": "Advanced carrier specific pickup options",
                    "type": "object",
                    "additionalProperties": true,
                    "x-nullable": true
                }
            }
        },
        "PickupCancelRequest": {
            "required": [
                "confirmation_number"
            ],
            "type": "object",
            "properties": {
                "confirmation_number": {
                    "title": "Confirmation number",
                    "description": "The pickup confirmation identifier",
                    "type": "string",
                    "minLength": 1
                },
                "address": {
                    "$ref": "#/definitions/AddressData"
                },
                "pickup_date": {
                    "title": "Pickup date",
                    "description": "\nThe pickup date\n\nDate Format: `YYYY-MM-DD`\n",
                    "type": "string",
                    "minLength": 1,
                    "x-nullable": true
                },
                "reason": {
                    "title": "Reason",
                    "description": "The reason of the pickup cancellation",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "OperationResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "The list of note or warning messages",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Message"
                    }
                },
                "confirmation": {
                    "$ref": "#/definitions/OperationConfirmation"
                }
            }
        },
        "RateRequest": {
            "required": [
                "shipper",
                "recipient",
                "parcels"
            ],
            "type": "object",
            "properties": {
                "shipper": {
                    "$ref": "#/definitions/Address"
                },
                "recipient": {
                    "$ref": "#/definitions/Address"
                },
                "parcels": {
                    "description": "The shipment's parcels",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Parcel"
                    }
                },
                "services": {
                    "description": "\nThe requested carrier service for the shipment.<br/>\nPlease consult [the reference](#operation/references) for specific carriers services.\n\nNote that this is a list because on a Multi-carrier rate request you could specify a service per carrier.\n",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "x-nullable": true
                },
                "options": {
                    "title": "Options",
                    "description": "\nThe options available for the shipment.\n\nPlease consult [the reference](#operation/references) for additional specific carriers options.\n",
                    "type": "object",
                    "additionalProperties": true,
                    "x-nullable": true
                },
                "reference": {
                    "title": "Reference",
                    "description": "The shipment reference",
                    "type": "string",
                    "x-nullable": true
                },
                "carrier_ids": {
                    "description": "\nThe list of configured carriers you wish to get rates from.\n",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "x-nullable": true
                }
            }
        },
        "Rate": {
            "description": "The list of returned rates",
            "required": [
                "carrier_name",
                "carrier_id",
                "currency",
                "test_mode"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "A unique identifier",
                    "type": "string",
                    "minLength": 1
                },
                "carrier_name": {
                    "title": "Carrier name",
                    "description": "The rate's carrier",
                    "type": "string",
                    "minLength": 1
                },
                "carrier_id": {
                    "title": "Carrier id",
                    "description": "The targeted carrier's name (unique identifier)",
                    "type": "string",
                    "minLength": 1
                },
                "currency": {
                    "title": "Currency",
                    "description": "The rate monetary values currency code",
                    "type": "string",
                    "minLength": 1
                },
                "service": {
                    "title": "Service",
                    "description": "The carrier's rate (quote) service",
                    "type": "string",
                    "x-nullable": true
                },
                "discount": {
                    "title": "Discount",
                    "description": "The monetary amount of the discount on the rate",
                    "type": "number",
                    "x-nullable": true
                },
                "base_charge": {
                    "title": "Base charge",
                    "description": "\nThe rate's monetary amount of the base charge.<br/>\nThis is the net amount of the rate before additional charges\n",
                    "type": "number",
                    "default": 0.0
                },
                "total_charge": {
                    "title": "Total charge",
                    "description": "\nThe rate's monetary amount of the total charge.<br/>\nThis is the gross amount of the rate after adding the additional charges\n",
                    "type": "number",
                    "default": 0.0
                },
                "duties_and_taxes": {
                    "title": "Duties and taxes",
                    "description": "The monetary amount of the duties and taxes if applied",
                    "type": "number",
                    "x-nullable": true
                },
                "transit_days": {
                    "title": "Transit days",
                    "description": "The estimated delivery transit days",
                    "type": "integer",
                    "x-nullable": true
                },
                "extra_charges": {
                    "description": "list of the rate's additional charges",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Charge"
                    },
                    "x-nullable": true
                },
                "meta": {
                    "title": "Meta",
                    "description": "provider specific metadata",
                    "type": "object",
                    "additionalProperties": true,
                    "x-nullable": true
                },
                "carrier_ref": {
                    "title": "Carrier ref",
                    "description": "The system carrier configuration id",
                    "type": "string",
                    "x-nullable": true
                },
                "test_mode": {
                    "title": "Test mode",
                    "description": "Specified whether it was created with a carrier in test mode",
                    "type": "boolean"
                }
            }
        },
        "RateResponse": {
            "required": [
                "rates"
            ],
            "type": "object",
            "properties": {
                "messages": {
                    "description": "The list of note or warning messages",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Message"
                    }
                },
                "rates": {
                    "description": "The list of returned rates",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Rate"
                    }
                }
            }
        },
        "Payment": {
            "description": "The payment details",
            "required": [
                "currency"
            ],
            "type": "object",
            "properties": {
                "paid_by": {
                    "title": "Paid by",
                    "description": "The payor type",
                    "type": "string",
                    "enum": [
                        "sender",
                        "recipient",
                        "third_party"
                    ],
                    "default": "sender"
                },
                "currency": {
                    "title": "Currency",
                    "description": "The payment amount currency",
                    "type": "string",
                    "enum": [
                        "EUR",
                        "AED",
                        "USD",
                        "XCD",
                        "AMD",
                        "ANG",
                        "AOA",
                        "ARS",
                        "AUD",
                        "AWG",
                        "AZN",
                        "BAM",
                        "BBD",
                        "BDT",
                        "XOF",
                        "BGN",
                        "BHD",
                        "BIF",
                        "BMD",
                        "BND",
                        "BOB",
                        "BRL",
                        "BSD",
                        "BTN",
                        "BWP",
                        "BYN",
                        "BZD",
                        "CAD",
                        "CDF",
                        "XAF",
                        "CHF",
                        "NZD",
                        "CLP",
                        "CNY",
                        "COP",
                        "CRC",
                        "CUC",
                        "CVE",
                        "CZK",
                        "DJF",
                        "DKK",
                        "DOP",
                        "DZD",
                        "EGP",
                        "ERN",
                        "ETB",
                        "FJD",
                        "GBP",
                        "GEL",
                        "GHS",
                        "GMD",
                        "GNF",
                        "GTQ",
                        "GYD",
                        "HKD",
                        "HNL",
                        "HRK",
                        "HTG",
                        "HUF",
                        "IDR",
                        "ILS",
                        "INR",
                        "IRR",
                        "ISK",
                        "JMD",
                        "JOD",
                        "JPY",
                        "KES",
                        "KGS",
                        "KHR",
                        "KMF",
                        "KPW",
                        "KRW",
                        "KWD",
                        "KYD",
                        "KZT",
                        "LAK",
                        "LKR",
                        "LRD",
                        "LSL",
                        "LYD",
                        "MAD",
                        "MDL",
                        "MGA",
                        "MKD",
                        "MMK",
                        "MNT",
                        "MOP",
                        "MRO",
                        "MUR",
                        "MVR",
                        "MWK",
                        "MXN",
                        "MYR",
                        "MZN",
                        "NAD",
                        "XPF",
                        "NGN",
                        "NIO",
                        "NOK",
                        "NPR",
                        "OMR",
                        "PEN",
                        "PGK",
                        "PHP",
                        "PKR",
                        "PLN",
                        "PYG",
                        "QAR",
                        "RSD",
                        "RUB",
                        "RWF",
                        "SAR",
                        "SBD",
                        "SCR",
                        "SDG",
                        "SEK",
                        "SGD",
                        "SHP",
                        "SLL",
                        "SOS",
                        "SRD",
                        "SSP",
                        "STD",
                        "SYP",
                        "SZL",
                        "THB",
                        "TJS",
                        "TND",
                        "TOP",
                        "TRY",
                        "TTD",
                        "TWD",
                        "TZS",
                        "UAH",
                        "UYU",
                        "UZS",
                        "VEF",
                        "VND",
                        "VUV",
                        "WST",
                        "YER",
                        "ZAR"
                    ]
                },
                "account_number": {
                    "title": "Account number",
                    "description": "The payor account number",
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "ShippingRequest": {
            "required": [
                "shipper",
                "recipient",
                "parcels",
                "payment",
                "selected_rate_id",
                "rates"
            ],
            "type": "object",
            "properties": {
                "shipper": {
                    "$ref": "#/definitions/AddressData"
                },
                "recipient": {
                    "$ref": "#/definitions/AddressData"
                },
                "parcels": {
                    "description": "The shipment's parcels",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParcelData"
                    }
                },
                "options": {
                    "title": "Options",
                    "description": "\nThe options available for the shipment.<br/>\nPlease consult [the reference](#operation/references) for additional specific carriers options.\n",
                    "type": "object",
                    "additionalProperties": true,
                    "x-nullable": true
                },
                "payment": {
                    "$ref": "#/definitions/Payment"
                },
                "customs": {
                    "$ref": "#/definitions/CustomsData"
                },
                "reference": {
                    "title": "Reference",
                    "description": "The shipment reference",
                    "type": "string",
                    "x-nullable": true
                },
                "label_type": {
                    "title": "Label type",
                    "description": "The shipment label file type.",
                    "type": "string",
                    "enum": [
                        "PDF",
                        "ZPL"
                    ],
                    "default": "PDF"
                },
                "selected_rate_id": {
                    "title": "Selected rate id",
                    "description": "The shipment selected rate.",
                    "type": "string",
                    "minLength": 1
                },
                "rates": {
                    "description": "The list for shipment rates fetched previously",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Rate"
                    }
                }
            }
        },
        "Shipment": {
            "required": [
                "shipper",
                "recipient",
                "parcels",
                "created_at",
                "test_mode"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "A unique identifier",
                    "type": "string",
                    "minLength": 1
                },
                "status": {
                    "title": "Status",
                    "description": "The current Shipment status",
                    "type": "string",
                    "enum": [
                        "created",
                        "purchased",
                        "shipped",
                        "transit",
                        "delivered"
                    ],
                    "default": "created"
                },
                "carrier_name": {
                    "title": "Carrier name",
                    "description": "The shipment carrier",
                    "type": "string",
                    "x-nullable": true
                },
                "carrier_id": {
                    "title": "Carrier id",
                    "description": "The shipment carrier configured identifier",
                    "type": "string",
                    "x-nullable": true
                },
                "label": {
                    "title": "Label",
                    "description": "The shipment label in base64 string",
                    "type": "string",
                    "x-nullable": true
                },
                "tracking_number": {
                    "title": "Tracking number",
                    "description": "The shipment tracking number",
                    "type": "string",
                    "x-nullable": true
                },
                "shipment_identifier": {
                    "title": "Shipment identifier",
                    "description": "The shipment carrier system identifier",
                    "type": "string",
                    "x-nullable": true
                },
                "selected_rate": {
                    "$ref": "#/definitions/Rate"
                },
                "selected_rate_id": {
                    "title": "Selected rate id",
                    "description": "The shipment selected rate.",
                    "type": "string",
                    "x-nullable": true
                },
                "rates": {
                    "description": "The list for shipment rates fetched previously",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Rate"
                    },
                    "x-nullable": true
                },
                "tracking_url": {
                    "title": "Tracking url",
                    "description": "The shipment tracking url",
                    "type": "string",
                    "format": "uri",
                    "x-nullable": true
                },
                "service": {
                    "title": "Service",
                    "description": "The selected service",
                    "type": "string",
                    "x-nullable": true
                },
                "shipper": {
                    "$ref": "#/definitions/Address"
                },
                "recipient": {
                    "$ref": "#/definitions/Address"
                },
                "parcels": {
                    "description": "The shipment's parcels",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Parcel"
                    }
                },
                "services": {
                    "description": "\nThe carriers services requested for the shipment.\n\nPlease consult [the reference](#operation/references) for specific carriers services.<br/>\nNote that this is a list because on a Multi-carrier rate request you could specify a service per carrier.\n",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "default": [],
                    "x-nullable": true
                },
                "options": {
                    "title": "Options",
                    "description": "\nThe options available for the shipment.<br/>\nPlease consult [the reference](#operation/references) for additional specific carriers options.\n",
                    "type": "object",
                    "additionalProperties": true,
                    "x-nullable": true
                },
                "payment": {
                    "$ref": "#/definitions/Payment"
                },
                "customs": {
                    "$ref": "#/definitions/Customs"
                },
                "reference": {
                    "title": "Reference",
                    "description": "The shipment reference",
                    "type": "string",
                    "x-nullable": true
                },
                "label_type": {
                    "title": "Label type",
                    "description": "The shipment label file type.",
                    "type": "string",
                    "enum": [
                        "PDF",
                        "ZPL"
                    ],
                    "x-nullable": true
                },
                "carrier_ids": {
                    "description": "\nThe list of configured carriers you wish to get rates from.\n\n*Note that the request will be sent to all carriers in nothing is specified*\n",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "default": [],
                    "x-nullable": true
                },
                "meta": {
                    "title": "Meta",
                    "description": "provider specific metadata",
                    "type": "object",
                    "additionalProperties": true,
                    "x-nullable": true
                },
                "created_at": {
                    "title": "Created at",
                    "description": "\nThe shipment creation date\n\nDate Format: `YYYY-MM-DD`\n",
                    "type": "string",
                    "minLength": 1
                },
                "test_mode": {
                    "title": "Test mode",
                    "description": "Specified whether it was created with a carrier in test mode",
                    "type": "boolean"
                },
                "messages": {
                    "description": "The list of note or warning messages",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Message"
                    },
                    "default": []
                }
            }
        },
        "ShipmentCancelRequest": {
            "required": [
                "shipment_identifier"
            ],
            "type": "object",
            "properties": {
                "shipment_identifier": {
                    "title": "Shipment identifier",
                    "description": "The shipment identifier returned during creation",
                    "type": "string",
                    "minLength": 1
                },
                "service": {
                    "title": "Service",
                    "description": "The selected shipment service",
                    "type": "string",
                    "x-nullable": true
                },
                "options": {
                    "title": "Options",
                    "description": "Advanced carrier specific cancellation options",
                    "type": "object",
                    "additionalProperties": true,
                    "x-nullable": true
                }
            }
        },
        "TrackingEvent": {
            "description": "The tracking details events",
            "type": "object",
            "properties": {
                "date": {
                    "title": "Date",
                    "description": "The tracking event's date",
                    "type": "string",
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "description": "The tracking event's description",
                    "type": "string",
                    "minLength": 1
                },
                "location": {
                    "title": "Location",
                    "description": "The tracking event's location",
                    "type": "string",
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "description": "The tracking event's code",
                    "type": "string",
                    "x-nullable": true
                },
                "time": {
                    "title": "Time",
                    "description": "The tracking event's time",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-nullable": true
        },
        "TrackingStatus": {
            "description": "The tracking details retrieved",
            "required": [
                "carrier_name",
                "carrier_id",
                "tracking_number",
                "test_mode"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "description": "A unique identifier",
                    "type": "string",
                    "minLength": 1
                },
                "carrier_name": {
                    "title": "Carrier name",
                    "description": "The tracking carrier",
                    "type": "string",
                    "minLength": 1
                },
                "carrier_id": {
                    "title": "Carrier id",
                    "description": "The tracking carrier configured identifier",
                    "type": "string",
                    "minLength": 1
                },
                "tracking_number": {
                    "title": "Tracking number",
                    "description": "The shipment tracking number",
                    "type": "string",
                    "minLength": 1
                },
                "events": {
                    "description": "The tracking details events",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TrackingEvent"
                    },
                    "x-nullable": true
                },
                "delivered": {
                    "title": "Delivered",
                    "description": "Specified whether the related shipment was delivered",
                    "type": "boolean"
                },
                "test_mode": {
                    "title": "Test mode",
                    "description": "Specified whether the object was created with a carrier in test mode",
                    "type": "boolean"
                }
            }
        },
        "TrackingResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "description": "The list of note or warning messages",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Message"
                    }
                },
                "tracking": {
                    "$ref": "#/definitions/TrackingStatus"
                }
            }
        },
        "References": {
            "required": [
                "APP_NAME",
                "APP_VERSION",
                "countries",
                "currencies",
                "carriers",
                "customs_content_type",
                "incoterms",
                "states",
                "services",
                "options",
                "package_presets",
                "packaging_types",
                "payment_types"
            ],
            "type": "object",
            "properties": {
                "APP_NAME": {
                    "title": "App name",
                    "type": "string",
                    "minLength": 1
                },
                "APP_VERSION": {
                    "title": "App version",
                    "type": "string",
                    "minLength": 1
                },
                "countries": {
                    "title": "Countries",
                    "type": "object",
                    "additionalProperties": true
                },
                "currencies": {
                    "title": "Currencies",
                    "type": "object",
                    "additionalProperties": true
                },
                "carriers": {
                    "title": "Carriers",
                    "type": "object",
                    "additionalProperties": true
                },
                "customs_content_type": {
                    "title": "Customs content type",
                    "type": "object",
                    "additionalProperties": true
                },
                "incoterms": {
                    "title": "Incoterms",
                    "type": "object",
                    "additionalProperties": true
                },
                "states": {
                    "title": "States",
                    "type": "object",
                    "additionalProperties": true
                },
                "services": {
                    "title": "Services",
                    "type": "object",
                    "additionalProperties": true
                },
                "options": {
                    "title": "Options",
                    "type": "object",
                    "additionalProperties": true
                },
                "package_presets": {
                    "title": "Package presets",
                    "type": "object",
                    "additionalProperties": true
                },
                "packaging_types": {
                    "title": "Packaging types",
                    "type": "object",
                    "additionalProperties": true
                },
                "payment_types": {
                    "title": "Payment types",
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "ShipmentList": {
            "required": [
                "results"
            ],
            "type": "object",
            "properties": {
                "next": {
                    "title": "Next",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                },
                "previous": {
                    "title": "Previous",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Shipment"
                    }
                }
            }
        },
        "ShipmentData": {
            "required": [
                "shipper",
                "recipient",
                "parcels"
            ],
            "type": "object",
            "properties": {
                "shipper": {
                    "$ref": "#/definitions/AddressData"
                },
                "recipient": {
                    "$ref": "#/definitions/AddressData"
                },
                "parcels": {
                    "description": "The shipment's parcels",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParcelData"
                    }
                },
                "options": {
                    "title": "Options",
                    "description": "\nThe options available for the shipment.<br/>\nPlease consult [the reference](#operation/references) for additional specific carriers options.\n",
                    "type": "object",
                    "additionalProperties": true,
                    "x-nullable": true
                },
                "payment": {
                    "$ref": "#/definitions/Payment"
                },
                "customs": {
                    "$ref": "#/definitions/CustomsData"
                },
                "reference": {
                    "title": "Reference",
                    "description": "The shipment reference",
                    "type": "string",
                    "x-nullable": true
                },
                "label_type": {
                    "title": "Label type",
                    "description": "The shipment label file type.",
                    "type": "string",
                    "enum": [
                        "PDF",
                        "ZPL"
                    ],
                    "default": "PDF"
                },
                "services": {
                    "description": "\nThe requested carrier service for the shipment.\n\nPlease consult [the reference](#operation/references) for specific carriers services.<br/>\nNote that this is a list because on a Multi-carrier rate request you could specify a service per carrier.\n",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "default": [],
                    "x-nullable": true
                },
                "carrier_ids": {
                    "description": "\nThe list of configured carriers you wish to get rates from.\n\n*Note that the request will be sent to all carriers in nothing is specified*\n",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "default": [],
                    "x-nullable": true
                }
            }
        },
        "ShipmentPurchaseData": {
            "required": [
                "selected_rate_id"
            ],
            "type": "object",
            "properties": {
                "selected_rate_id": {
                    "title": "Selected rate id",
                    "description": "The shipment selected rate.",
                    "type": "string",
                    "minLength": 1
                },
                "label_type": {
                    "title": "Label type",
                    "description": "The shipment label file type.",
                    "type": "string",
                    "enum": [
                        "PDF",
                        "ZPL"
                    ],
                    "default": "PDF"
                },
                "payment": {
                    "$ref": "#/definitions/Payment"
                }
            }
        },
        "TrackerList": {
            "required": [
                "results"
            ],
            "type": "object",
            "properties": {
                "next": {
                    "title": "Next",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                },
                "previous": {
                    "title": "Previous",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TrackingStatus"
                    }
                }
            }
        },
        "Webhook": {
            "required": [
                "url",
                "enabled_events",
                "test_mode"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "description": "The URL of the webhook endpoint.",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "description": "An optional description of what the webhook is used for.",
                    "type": "string",
                    "x-nullable": true
                },
                "enabled_events": {
                    "description": "The list of events to enable for this endpoint.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "all",
                            "shipment.purchased",
                            "shipment.cancelled",
                            "shipment.fulfilled",
                            "tracker.created",
                            "tracker.updated"
                        ]
                    }
                },
                "test_mode": {
                    "title": "Test mode",
                    "description": "Specified whether it was created with a carrier in test mode",
                    "type": "boolean"
                },
                "disabled": {
                    "title": "Disabled",
                    "description": "Indicates that the webhook is disabled",
                    "type": "boolean",
                    "x-nullable": true
                },
                "id": {
                    "title": "Id",
                    "description": "A unique identifier",
                    "type": "string",
                    "minLength": 1
                },
                "last_event_at": {
                    "title": "Last event at",
                    "description": "The datetime of the last event sent.",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        },
        "WebhookList": {
            "required": [
                "results"
            ],
            "type": "object",
            "properties": {
                "next": {
                    "title": "Next",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                },
                "previous": {
                    "title": "Previous",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Webhook"
                    }
                }
            }
        },
        "WebhookData": {
            "required": [
                "url",
                "enabled_events",
                "test_mode"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "description": "The URL of the webhook endpoint.",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "description": "An optional description of what the webhook is used for.",
                    "type": "string",
                    "x-nullable": true
                },
                "enabled_events": {
                    "description": "The list of events to enable for this endpoint.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "all",
                            "shipment.purchased",
                            "shipment.cancelled",
                            "shipment.fulfilled",
                            "tracker.created",
                            "tracker.updated"
                        ]
                    }
                },
                "test_mode": {
                    "title": "Test mode",
                    "description": "Specified whether it was created with a carrier in test mode",
                    "type": "boolean"
                },
                "disabled": {
                    "title": "Disabled",
                    "description": "Indicates that the webhook is disabled",
                    "type": "boolean",
                    "x-nullable": true
                }
            }
        }
    }
}
